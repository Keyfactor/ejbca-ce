# File containing internal localization messages used by 
# log comments, approval notifications and some exceptions in CESeCore.
#
# The keys should be sections into which module the message
# originates from, example raadmin.msg1 or keyrecovery.testmessage
#
# FRENCH VERSION

# Native encoding:  UTF-8
# EJBCA supported:  8.x
# 
# Contributors:
#   David CARELLA <david.carella@gmail.com>


# Test resources - Only used with the test script
raadmin.testmsg       = Test fr-FR                        
raadmin.testparams    = Test {0} {1} {2} {3} {4} message {0} 

# Database protection resources
databaseprotection.errorverify = "La protection de ligne est mauvaise, elle devrait être '{0}' (calculée) mais elle était '{1}' (en base de données). Classe {2}, Identifiant de ligne (rowId) {3}."
databaseprotection.notokenwithid = Pas de token de protection de base de données avec l'identifiant {0}.

# Backup resources
backup.notauthorized = L'administrateur '{0}' n'est pas authorisé à réaliser une sauvegarde (backup).
restore.notauthorized = L'administrateur '{0}' n'est pas authorisé à réaliser une restauration (restore).

# CA administration resources
caadmin.addedca = L'AC avec l'identifiant {0} et le nom {1} a été ajoutée, statut : {2}. 
caadmin.editedca = L'AC avec l'identifiant {0} et le nom {1} a été modifiée.
caadmin.removedca = L'AC avec l'identifiant {0} et le nom {1} a été supprimée.
caadmin.renamedca = L'AC avec le nom {0} et l'identifiant {1} a été renommé en {2}.
caadmin.updatedcaid = Les références à l'AC d'identifiant ID {0} ont été mises à jour vers l'ID {1} et le DN du sujet '{2}'.
caadmin.caexistsname = Une AC avec le même nom {0} existe déjà.
caadmin.caexistsid = Une AC avec le même identifiant {0} existe déjà.
caadmin.canotexistsid = L'AC avec l'identifiant {0} n'existe pas.
caadmin.canotexistsname = L'AC avec le nom {0} n'existe pas.
caadmin.notauthorizedtoca = L'administrateur '{0}' n'est pas autorisé à gérer l'AC {1}.
caadmin.notauthorizedtoaddca = L'administrateur '{0}' n'est pas autorisé à ajouter l'AC {1}.
caadmin.notauthorizedtoeditca = L'administrateur '{0}' n'est pas autorisé à modifier l'AC {1}.
caadmin.notauthorizedtoremoveca = L'administrateur '{0}' n'est pas autorisé à supprimer l'AC avec l'identifiant {1}.
caadmin.notauthorizedtorenameca = L'administrateur '{0}' n'est pas autorisé à renommer l'AC avec l'identifiant {1}.
caadmin.caexpired = L'AC {0} a expiré.
caadmin.canotyetvalid = L'AC {0} n'est pas encore valide.

# Authentication resources
authentication.failed = L'authentification a échoué. De plus amples informations: {0}

# Authorization resources
authorization.roleadded = Le rôle {0} a été ajouté.
authorization.erroraddroleexists = Erreur lors de l'ajout du rôle {0}, ce groupe existe déjà.
authorization.errorrolenotexists = Le rôle avec le nom {0} n'existe pas.
authorization.errorroleexists = Le rôle avec le nom {0} existe déjà.
authorization.roleremoved = Le rôle {0} a été supprimé.
authorization.rolerenamed = Le rôle {0} a été renommé en {1}.
authorization.accessrulesadded = Droits d'accès suivants ajoutés au rôle {0}: {1}
authorization.accessruleschanged = Droits d'accès suivants changé dans le rôle {0}: {1}
authorization.accessrulesremoved = Droits d'accès suivants supprimés du rôle {0}.
authorization.adminadded = Administrateur(s) {0} ajouté(s) au rôle {1}.
authorization.adminchanged = Modifié les administrateurs {0} dans le rôle de {1}
authorization.adminremoved = Suppression d'administrateurs {0} du rôle {1}.
authorization.errorcreateauthtree = Erreur lors de la création de AuthorizationTreeUpdateDataBean.
authorization.notauthorizedtoeditroles = L'administrateur {0} n'est pas autorisé à éditer du rôles.
authorization.notauthorizedtoviewroles = L'administrateur {0} n'est pas autorisé à visualiser les rôles.
authorization.notauthorizedtoeditrole = L'administrateur {0} n'est pas autorisé à éditer le rôle {1}.
authorization.notauthorizedtoresource = L'administrateur n'est pas autorisé à gérer la resource {0}. Message : {1}.
authorization.notauthorizedtoapprovalrequest = L'administrateur {0} n'est pas autorisé pour la demande d'approbation d'identifiant {1} selon le profil d'approbation d'identifiant {2}.

# Certificate creation resources
createcert.popverificationfailed = La vérification POP a échoué.
createcert.nokeyinrequest = Pas de clé publique dans la demande.
createcert.canotfoundissuerusername = Impossible de trouver l'identifiant de l'AC depuis le DN émetteur '{0}' ou le nom d'utilisateur '{1}'.
createcert.canotactive = L'AC de signature {0} n'est pas active.
createcert.usertypeinvalid = L'utilisateur est marqué comme utilisateur invalide (USER_INVALID) : impossible de créer un certificat pour l'utilisateur '{0}'.
createcert.key_exists_for_another_user = L'utilisateur '{0}' n'est pas autorité à utiliser la même clé qu'un autre utilisateur.
createcert.enforce_key_renewal = L'utilisateur '{0}' n'est pas autorité à utiliser la même clé qu'un autre certificat utilise déjà.
createcert.subjectdn_exists_for_another_user = L'utilisateur '{0}' n'est pas autorisé à utiliser le même DN du sujet que le(s) utilisateur(s) {1} utilise(nt) lorsqu'ils sont émis par la même AC (même si le suffixe de CN est utilisé). Voir la directive 'Forcer l'unicité du DN' à la rubrique Autorités de certification.
createcert.not_unique_certserialnumberindex = La personnalisation du numéro de série du certificat ne sera pas autorisée, tant que l'index de (issuerDN,serialNumber) ne sera pas unique dans la table 'CertificateData'.
createcert.certprof_not_allowing_cert_sn_override = Le profil de certificats utilisé ('{0}') n'autorise pas la surcharge du numéro de série du certificat.
createcert.cert_serial_number_already_in_database = Il y a déjà un certificat stocké dans la table 'CertificateData' avec le numéro de série '{0}'.
createcert.certprof_not_allowing_cert_sn_override_using_normal = Le numéro de série personnalisé ('{0}') n'est pas autorisé par le profil de certificats. Un numéro de série normal est utilisé.
createcert.errorcertprofilenotfound = Le profil de certificats ({0}) ne peut pas être trouvé.
createcert.errorcertprofiletype = Profil de certificats ({0}) incorrect pour une entité finale. Seuls les profils de certificats de type "Certificat final" (END_USER) peuvent être utilisés pour le composant de signature.
createcert.errorcertprofilenotauthorized = Les données de l'entité contiennent une AC, {0}, que le profil de certificats, {1}, n'est pas autorisé à utiliser.
createcert.unsupportedkeytype = Type de clés publiques non supporté ({0}) : seuls les types de clés RSA, ECDSA, DSA, EdDSA, Falcon et Dilithium sont supportés.
createcert.illegalkeylength = Taille de clé invalide, non autorisée par le profil de certificats : {0}.
createcert.illegalkeyalgorithm = Algorithme de clé invalide, non autorisé par le profil de certificats : {0}.
createcert.notauthorized = L'administrateur '{0}' n'est pas autorisé à créer un certificat avec l'AC {1}.
createcert.errorbeyondmaxvalidity = Le paramètre de date de validité en aval (notAfter) de la demande ({0}) pour l'utilisateur '{1}' est plus longue que le maximum indiqué dans le profil de certificats ({2}) : ce qui n'est pas autorisé. La valeur du paramètre notAfter du profil de certificats est utilisée.
createcert.limitingvalidity = Limitation de la validité du certificat, car la durée de validité demandée ({0}) va au-delà de la validité de l'AC ({1}).
createcert.limitingvaliditystart = Limitation de la validité du certificat, car le début de validité demandé ({0}) précède le début de validité de l'AC ({1}).
createcert.errorinvalidcausality = La date de début ({0}) est située aprés la date de fin ({1}). Tentative de récupération des dates en les inversant.
createcert.errorinvalidstarttime = Ignorance de l'invalidité du format d'heure de début ({0}).
createcert.errorbeforecurrentdate = Le paramètre notBefore (pas avant) de la demande ({0}) pour l'utilisateur '{1}' antidate la date courante : ce qui n'est pas autorisé. La date et l'heure courante sont utilisées à la place.
createcert.errorbeyondtoolateexpiredate = La date d'expiration demandée doit être antérieure à celle du paramètre 'ca.toolateexpiredate'. Date d'expiration du certificat '{0}'. ca.toolateexpiredate '{1}'.
createcert.invalidsignaturealg = L'algorithme de signature {0} ne fait pas partie des algorithmes de signature autorisés. Algoritmes autorisés: {1}. 
createcert.illegalname = Le DN du sujet requêté est mal formaté. Le nom mal formaté est seulement visible dans les journaux des traces.
createcert.errorpathverifykeyid = L'identifiant de la clé d'autorité (authorityKeyIdentifier) du certificat délivré ({0}) ne correspond pas avec l'identifiant de la clé (subjectKeyIdentifier) du certificat de l'AC ({1}).
createcert.errorpathverifydn = Le DN de l'émetteur (issuer) du certificat délivré ({0}) ne correspond pas avec le DN du sujet (subject) du certificat de l'AC ({1}).
createcert.privatekeyusagenotvalid = PrivateKeyUsagePeriod.notBefore n'est pas valide jusqu'à {0} pour l'AC avec le DN du sujet '{1}'.
createcert.privatekeyusageexpired = PrivateKeyUsagePeriod.notAfter expire le {0} pour l'AC avec le DN du sujet '{1}'.
createcert.ctlogsubmissionsuccessful = Le pré-certificat CT a été soumis avec succès auprès des journaux 'CT Logs'.
createcert.ctlogsubmissionfailed = Échec de la soumission d'un pré-certificat vers le numéro requis de journaux 'CT Logs'. Cependant, le pré-certificat peut avoir été publié dans certains journaux.

# CRL creation resources
createcrl.createdcrl = Création de la CRL numéro {0} pour l'AC '{1}' avec le DN '{2}'.
createcrl.errorcreate = Erreur lors de la création de la CRL pour l'AC {0}. Message : {1}.
createcrl.caoffline = L'AC {0}, {1} est hors ligne. La CRL ne peut pas être générée.
createcrl.errornotactive = L'AC {0}, {1} n'est pas active. La CRL ne peut pas être créée. Le statut est {2}.
createcrl.catokenoffline = Le token d'AC pour l'AC {0}, {1} est hors ligne. La CRL ne peut pas être créée.
createcrl.crlinfonull = Pas d'information disponible sur la CRL pour l'AC {0}. Utilisation du nombre 0 pour la prochaine mise à jour (nextUpdate).
createcrl.generalerror = Erreur lors de la génération de la CRL pour l'AC {0}.
createcrl.erroravailcas = Erreur lors du listage des AC disponibles.
createcrl.notauthorized = L'administrateur '{0}' n'est pas autorisé à créer de CRL pour l'AC {1}.
createcrl.nocrlcreate = Aucune CRL n'a été créée pour l'AC {0}.

# Store resources
store.storecert = Certificat enregistré avec le nom '{0}', empreinte={1}, subjectDN '{2}', issuerDN '{3}', serialNo={4}.
store.storecertwithaccountbindingid = Certificat enregistré avec le nom '{0}', empreinte={1}, subjectDN '{2}', issuerDN '{3}', serialNo={4}, accountBindingId={5}.
store.revokedcert = Certificat révoqué avec le nom '{0}', empreinte={1}, revocationReason={2}, subjectDN '{3}', issuerDN '{4}', serialNo={5}.
store.revokedcertreasonchange = La raison de révocation a été changée pour le certificat révoqué avec le nom '{0}', empreinte={1}, revocationReason={2}, subjectDN '{3}', issuerDN '{4}', serialNo={5}.
store.revokedcertinvaldatechange = La date d'invalidité a été changée pour le certificat révoqué avec le nom '{0}', empreinte={1}, revocationReason={2}, subjectDN '{3}', issuerDN '{4}', serialNo={5}.
store.unrevokedcert = Certificat ré-activé avec le nom '{0}', empreinte={1}, revocationReason={2}, subjectDN '{3}', issuerDN '{4}, serialNo={5}.
store.ignorerevoke = Requête du statut de révocation (setRevokeStatus()) numéro : {0}, ignoré. Statut actuel du certificat : {1}. Raison de la révocation : {2}.
store.revokedallbyca = Tous les certificats d'AC de l'émetteur {0} révoqués avec succès. Certificats {1} révoqués de manière permanente pour la raison {2}.
store.errorrevokeallbyca = Erreur pendant la révocation de tous les certificats de l'AC émis par par l'émetteur {0}.
store.errorfindcertfp  = Impossible de trouver le certificat avec l'empreinte {0} et le numéro de série {1}.
store.errorfindcertserno = Impossible de trouver le certificat avec le numéro de série {0}.
store.errorsetstatusargument = Le statut ne peut pas être directement positionné à RÉVOQUÉ (REVOKED) ni ACTIF (ACTIVE), utiliser plutôt la méthode setRevokeStatus. Demande : empreinte={0}, statut={1}.
store.setstatus = Le statut a été positionné pour le certificat avec le nom '{0}', empreinte={1}, statut={2}, subjectDN '{3}', issuerDN '{4}, serialNo={5}.
store.setstatusfailed = Tentative de positionnement du statut {0} pour le certificat avec l'empreinte {1}, qui n'existe pas.
store.storecrl = Enregistrement de la CRL avec le numéro {0}, empreinte={1}, issuerDN '{2}'.
store.errorstorecrl = Erreur d'enregistrement de la CRL avec le numéro {0}, issuerDN '{1}'.  
store.errorstorecrlwrongnumber = Tentative d'enregistrement de la CRL ayant le numéro {0}, mais une CRL avec le numéro {1} existe déjà pour l'émetteur dont le DN est '{2}'.
store.getcrl = Accès à la CRL depuis l'émetteur {0} avec le numéro de CRL {1}.
store.errorgetcrl = Erreur d'accès à la CRL de l'émetteur {0} avec le numéro de CRL {1}.
store.errorgetcrlinfo = Erreur d'accès aux informations de la CRL de l'émetteur {0}.
store.removedcrl = Suppression de la CRL avec l'empreinte={0} et le numéro {1} pour l'émetteur dont le DN est '{2}'.
store.crlpartition = Partition CRL : {0}
store.errorstorecert = Erreur lors de l'enregistrement du certificat.
store.errorcertinfo = Impossible de trouver le certificat avec l'empreinte {0}.
store.errorfindcertuser = Impossible de trouver le certificat avec le nom {0}.
store.errorseveralissuerserno = Erreur possible dans la base de données : il existe plus d'un certificat avec le même émetteur : {0} et le même numéro de série : {1}, est-ce des certificats CVC ?
store.errorcertprofilefixed = Erreur durant le traitement du profil de certificats {0} : nom d'un profil fixe (FIXED).
store.errorcertprofileexists = Le profil de certificats {0} existe déjà.
store.errorcertprofilenotexist = Le profil de certificats {0} n'existe pas.
store.addedcertprofile = Le nouveau profil de certificats {0} a été créé.
store.editcertprofilenotauthorized = L'administrateur '{0}' n'est pas autorisé à éditer le profil de certificats {1}.
store.errorcreatecertprofile = Erreur pendant la création du nouveau profil de certificats {0}.
store.erroraddprofilewithtempl = Erreur durant l'ajout d'un profil de certificats {0} utilisant le profil {1} comme modèle.
store.addedprofilewithtempl = Le nouveau profil de certificats {0} a été créé à partir du profil existant {1} comme modèle.
store.removedprofile = Profil {0} supprimé.
store.errorremoveprofile = Erreur pendant la suppression du profil de certificats {0}.
store.renamedprofile = Profil de certificats {0} renommé en {1}.
store.errorrenameprofile = Erreur pendant le renommage du profil de certificats {0} en {1}.
store.editedprofile = Profil de certificats {0} modifié.
store.erroreditprofile = Erreur pendant la modification du profil de certificats {0}.
store.editapprovalprofilenotauthorized = L'administrateur '{0}' n'est pas autorisé à modifier les profils d'approbation.

endentity.extendedinfoupgrade = Mise à jour des informations étendues avec la version {0}.

# Miscellaneous resources
sernogenerator.discarding = Suppression des numéros de série hors de la plage de valeurs.

# Crypto and CA tokens in CESeCore
token.createdtoken = Création du magasin de clés (Crypto Token) avec le nom de classe {0} et l'identifiant ID={1}.
token.extractablekey = Une clé matérielle ne doit pas être exportable. Vous pouvez positionner ca.doPermitExtractablePrivateKeys=true dans ejbca.properties pour autoriser les clés exportables. ca.doPermitExtractablePrivateKeys={0}.
token.noprivate = La clé privée avec l'alias '{0}' ne peut pas être lue dans le magasin de clés. Retour nul. Si la clé a été générée après le dernier démarrage du serveur d'applications, alors redémarrer le serveur d'applications.
token.nopublic = La clé publique avec l'alias '{0}' ne peut pas être lue dans le magasin de clés. Retour nul. Si la clé a été générée après le dernier démarrage du serveur d'applications, alors redémarrer le serveur d'applications.
token.nopinencrypt = Échec de chiffrement du code PIN d'auto-activation. Utilisation d'un code non chiffré à la place :
token.jceinitfail = Échec d'initialisation du provider JCE. Les opérations de chiffrement ne fonctionneront probablement pas, mais le processus continue...
token.errornosuchkey = Pas de clé avec l'alias '{0}'.
token.inforegisterclasspath = Impossible d'enregistrer {0}. Ce n'est habituellement pas une erreur.
token.classnotfound = Classe non trouvée : {0}.
token.errorinstansiate = Impossible de lancer une instance de {0}. {1}.
token.deactivate = Désactivation du magasin de clés (Crypto Token) d'identifiant ID={0}.
token.activated = Activation du magasin de clés (Crypto Token) d'identifiant ID={0}.
token.erroractivate = Erreur durant l'activation du magasin de clés (Crypto Token) d'identifiant ID={0}. {1}.
token.wrongauthcode = Code d'authentification invalide. Token ID={0}.
token.deleteentry = Suppression de l'entrée avec l'alias '{0}' du token avec l'identifiant ID={1}.
token.errorcertreqverify = La requête de certificat n'est pas vérifiée.
token.errorkeynottoken = La clé avec l'empreinte de clé publique {0} n'est pas sur le token.
token.errornokeyalias = L'alias de clé '{0}' n'a pas été trouvé dans le magasin de clés.
token.errornocertalias = L'alias de certificat '{0}' n'a pas été trouvé dans le magasin de certificats.
token.authcodemissing = Un code d'authentification doit être fourni. La génération ou l'activation de nouvelles clés requière soit un mot de passe en argument soit le mode auto-activation actif. Token ID={0}.
token.activationtestfail = Erreur de test d'activation pour le magasin de clés (Crypto Token) d'identifiant ID={0}.
token.upgrade = Mise à jour du magasin de clés (Crypto Token) avec la version {0}.
token.generatedkeypair = Génération de la biclé avec la spécification {0} et l'alias '{1}' pour le magasin de clés (Crypto Token) avec l'identifiant ID={2}.
token.generatedsymkey = Génération d'une nouvelle clé symétrique avec l'algorithme {0}, la taille {1} et l'alias '{2}' pour le magasin de clés (Crypto Token) avec l'identifiant ID={3}.
token.errornotextractable = Le conteneur de clés (Crypto Token) n'autorise pas l'exportation de clés privées. Clés demandées : clé privée d'alias {0} et clé de chiffrement d'alias {1}.
token.errornotextractable_allkeys = Le conteneur de clés (Crypto Token) {0} n'autorise pas l'exportation de clés privées.
token.nameisinuse = Le nom '{0}' est déjà utilisé par un autre conteneur de clés (Crypto Token).
token.offline = Les clés dans le conteneur de clés (Crypto Token) d'identifiant {0} ne sont pas accessibles. Le conteneur de clés (Crypto Token) est-il actif ?

# CA token resources
catoken.generatedkeys = De nouvelles clés ont été générées pour l'AC avec l'identifiant {0}, renew={1}, activate={2}.
catoken.activatednextkey = Activation de la prochaine signature de clé pour le magasin de clés (Crypto Token) d'identifiant {0}.
catoken.setproperty = Positionnement de la propriété du token d'AC pour l'AC avec : ID={0}, clé={1}, valeur={2}.

# InternalKeyBinding resources
internalkeybinding.nameisinuse = Le nom '{0}' est déjà utilisé par un autre binding de clés internes (Internal Key Binding).

# OCSP resources
ocsp.additionaldata = La requête OCSP était codée sur '{0}' octets, mais la valeur de HTTP Content-length était de '{1}' octets. Le client OCSP est peut-être cassé ou essaie de vous envoyer trop de données.
ocsp.badurlenc = Codage incorrect de l'URL dans la requête.
ocsp.certcollectionempty = La collection de certificats adressée est vide.
ocsp.classnotfound = La classe {0} ne peut pas être chargée.
ocsp.emptyreq = Requête vide: aucun octet reçu depuis l'adresse IP {0}.
ocsp.errorcomparehash = Exception OCSP durant la comparaison des empreintes des certificats ; certificat d'AC non pris en compte pour '{0}'.
ocsp.errordatabaseunid = Réception d'une erreur de base de données en recherchant une source de données pour Unid-Fnr.
ocsp.errorfindcert = Incapable de trouver le certificat avec le numéro de série {0} émis par : {1}.
ocsp.errorfindcacert = Impossible de trouver le certificat par le biais de l'empreinte de l'émetteur {0}, ni le répondeur par défaut {1}.
ocsp.errorfindcacertusedefault = Impossible de trouver le certificat par le biais de l'empreinte de l'émetteur {0}. Utilisation du répondeur par défaut pour envoyer le message « {1} ».
ocsp.errorgencerthash = Impossible de générer l'empreinte du certificat d'AC.
ocsp.errorgetalias = Impossible d'obtenir l'alias {0} dans le fichier {1}.
ocsp.errorinitialize = Incapable d'initialiser la servlet OCSP (OCSPServlet).
ocsp.errorinvalidsignature = La signature des requêtes OCSP (OCSPRequest) est invalide. Signée par '{0}'.
ocsp.errorloadsigningcerts = Impossible de charger les certificats de signature.
ocsp.errornocacreateresp = Impossible de trouver le certificat et la clé d'AC pour générer la réponse OCSP.
ocsp.errornoclientauth = Requête reçue sans authentification client de (IP,FQDN) : {0},{1}.
ocsp.errornoinitparam = Le paramètre d'initialisation {0} doit être positionné.
ocsp.errornoreqentities = La requête OCSP ne contient aucune entité de type requête simple (simpleRequest).
ocsp.errornosignkeys = Aucune clé de signature valide n'est disponible à cet instant.
ocsp.errornotrustfiles = Pas de fichier dans le répertoire trustDir : {0}.
ocsp.errornovalidkeys = Pas de clé valide spécifiée.
ocsp.errorocspkeynotusable = Clé de signature OCSP non utilisable pour l'AC {0}. Certificat avec le numéro de série : {1}.
ocsp.errorprocessextension = Une erreur s'est produite durant le traitement de la classe d'extension OCSP : {0}. Code d'erreur : {1}.
ocsp.errorprocessreq = Erreur de traitement d'une requête OCSP. Message : {0}.
ocsp.errorreadingfile = Erreur de lecture {0} depuis {1} : {2}.
ocsp.errorreadingtrustfiles = Erreur de lecture des fichiers dans trustDir : {0}.
ocsp.errortoomanyreqentities = La requête OCSP contient trop d'entités de type requête simple (simpleRequest). Maximum autorisé : {0}.
ocsp.errorunidnosnindn = Impossible de trouver un numéro de série dans le DN '{0}'.
ocsp.errorunidnosnmapping = Aucune correspondance de Fnr existante pour UNID {0}.
ocsp.errorunsignedreq = Requête OCSP non signée. Le servlet impose la signature.
ocsp.erroruntrustedclientauth = Requête reçue avec un certificat client de (IP,FQDN) : {0},{1}.
ocsp.errorverifycert = Erreur en essayant de vérifier le certificat client.
ocsp.infoaddedstatusinfo = Ajout de l'information de statut {0} pour le certificat avec le numéro de série {1} et émis par l'émetteur {2}.
ocsp.inforeceivedrequest = Requête OSCP reçue pour le certificat avec le numéro de série {0} et l'empreinte du nom de l'émetteur {1}. Adresse IP du client : {2}.
ocsp.inforeceivedrequestwxff = Requête OSCP reçue pour le certificat avec le numéro de série {0} et l'empreinte du nom de l'émetteur {1}. Adresse IP du client : {2}. X-Forwarded-For : {3}.
ocsp.infosigner = La requête OCSP (OCSPRequest) a été signée par '{0}'.
ocsp.infosigner.certexpired = Le certificat de signature OCSP est expiré pour (DN du sujet '{0}', DN de l'émetteur '{1}'). Message : {2}.
ocsp.infosigner.certnotyetvalid = Le certificat de signature OCSP n'est pas encore valide pour (DN du sujet '{0}', DN de l'émetteur '{1}'). Message : {2}.
ocsp.infosigner.invalidcertsignature = Vérification du certificat du signataire pour (DN du sujet '{0}', DN de l'émetteur '{1}') échouée. Message : {2}.
ocsp.infosigner.nocacert = Pas de certificat d'AC trouvé pour le certificat de signature OCSP avec le DN du sujet '{0}' et le DN de l'émetteur '{1}'.
ocsp.infosigner.notallowed = Le certificat de signature OCSP pour '{0}' n'est pas autorisé à cause de restrictions liées au signataire ou à l'émetteur. DN de l'émetteur '{1}', numéro de série {2}.
ocsp.infosigner.revoked = Le certificat de signature OCSP pour '{0}' est révoqué. DN de l'émetteur '{1}', numéro de série {2}.
ocsp.missingreq = La dernière partie de l'URL est manquante dans la requête (cf. RFC 2560, § A.1.1).
ocsp.newsigningkey = Nouvelle clé de signature OCSP pour l'AC '{0}'. Certificat {1}.
ocsp.nocardpwd = Pas de mot de passe de carte spécifié.
ocsp.nohwsigningclass = Pas de classe de signature OCSP matériel définie.
ocsp.nomatchingcacert = Impossible de trouver le certificat d'AC correspondant au DN : {0}.
ocsp.receivedunidreq = Demande reçue de (IP,FQDN) : {0},{1} pour Fnr correspondant à Unid={2}.
ocsp.rekey.cryptotoken.notactivated = Le conteneur de clés (Crypto Token) n'a pas été activé. Appel de : {0}.
ocsp.rekey.failed.unknown.reason = La regénération de clé a échoué pour la cible {0} pour une raison inconnue (voir la stacktrace) : {1}.
ocsp.rekey.invalid.key = Il n'est pas possible de réaliser la regénération de clé sur une clé invalide. Appel de : {0}.
ocsp.rekey.keystore.notactivated = Le magasin de clés n'a pas été activé. Appel de : {0}.
ocsp.rekey.triggered = La servlet a déclenché la regénération de clé OCSP pour : {0}.
ocsp.rekey.triggered.dn.not.existing = Impossible de regénérer les clés pour la cible '{0}'. Valeurs testées sans correspondance : {1}
ocsp.rekey.triggered.dn.not.valid = Le DN du sujet '{0}' n'est pas valide pour la regénération de clé OCSP.
ocsp.rekey.triggered.not.enabled = La regénération de clé OCSP n'est pas activée, car aucun mot de passe n'est positionné. Appel depuis : {0}
ocsp.rekey.triggered.unauthorized.ip = Réception d'une commande de regénération de clé OCSP depuis une IP non autorisée. Appel depuis : {0}
ocsp.rekey.triggered.wrong.password = Mot de passe incorrecte. Appel depuis : {0}
ocsp.reloadkeys = Rechargement de la clé due à une requête provenant de {0}.
ocsp.returnedunidresponse = Réponse retournée à (IP,FQDN) : {0},{1} avec Unid={2}.
ocsp.shrinkmaxage = RFC 5019, § 6.2 : la date ultime devrait être 'ultérieure à thisUpdate et antérieure à nextUpdate'. Réduire la date ultime (maxAge) à la plus grande valeur possible '{0}'.
ocsp.signcerthasnochain = Pas de chaîne de certification jusqu'à une AC racine pour le certificat signataire avec le numéro de série {0} et émis par l'émetteur {1}.
ocsp.signcertnotindb = Le certificat de signature avec le numéro de série {0} émis par l'AC {1} ne peut pas être trouvé dans la base de données (les certificats de signature et d'AC doivent être publiés dans le répondeur OCSP).
ocsp.signcertissuerrevoked = L'émetteur du certificat de signature avec le numéro de série {0} et le DN du sujet {1} est révoqué.
ocsp.signingkeynotincache = Le binding de clés avec le nom '{0}' n'est pas chargé en cache.
ocsp.toolarge = Requête ignorée. OCSP supporte seulement les requêtes de {0} octets au plus. L'actuelle requête était de {1} octets.
ocsp.unknownmethod = Méthode de requête inconnue '{0}'. Seules les méthodes GET et POST sont supportées.

# Request resources
request.toolarge = Requête ignorée. Seules les requêtes de {0} octets ou moins sont supportées. La requête actuelle avait {1} octets. 
request.notasequence = Pas de séquence au niveau supérieur. La balise (tag) était {0}.
request.notcorrectasn1length = Le message n'a pas la bonne longueur selon la longueur ASN.1 de la balise (tag). La longueur de la balise (tag) était {0}, mais seulement {1} octets ont été lus.

# X.509v3 certificate extension
certext.errorparsingproperty= Erreur durant l'analyse du fichier 'certextensions.properties'.
certext.certextmissconfigured = Les extensions de certificat {0} semblent être mal configurées dans le fichier 'certextensions.properties'.
certext.noextensionforid = Pas d'extension configurée pour l'identifiant {0}. Réponse nulle retournée.
certext.basic.incorrectvalue = Propriété 'valeur' incorrect pour l'extension basique de certificat avec l'identifiant {0} et l'OID {1}.
certext.basic.incorrectenc = Codage incorrect ({0}) pour l'extension basique de certificat avec l'identifiant {1}.
certext.basic.illegalvalue = Valeur illégale {0} pour l'extension basique de certificat avec l'identifiant {1} et l'OID {2}.

# Certificate Transparency
certificatetransparency.failedtoadd = Échec lors de l'ajout d'un certificat vers le numéro requis dans les journaux 'CT Logs'. {0}
certificatetransparency.invalidsignature = Signature invalide dans la réponse SCT depuis l'URL '{0}'.

# General error messages, used in several places
error.catokenoffline = Le token de l'AC '{0}' est hors ligne.
error.caoffline = L'AC '{0}' n'est pas active. Statut de l'AC={1}.

# Card Verifiable Certificate resources
cvc.error.notcvcrequest = La requête n'est pas une requête de certificat CV.
cvc.info.nocvcpkcs7 = Le PKCS 7 n'existe pas pour les certificats CV.
cvc.info.createlinkcert = Création d'un certificat de lien pour '{0}' émis par '{1}'.
cvc.error.missingdnfield = Le DN '{0}' n'est pas valide. Le champ {1} doit être rempli.

# Global Configuration resources
globalconfig.savedconf = Enregistrement de la configuration globale avec l'identifiant {0}.
globalconfig.createdconf = Configuration globale avec l'identifiant {0} créée.
globalconfig.errorcreateconf = Erreur lors de la création de la configuration globale.
globalconfig.error.querysizetoolarge = Ne peut pas positionner la limite de taille de requêtes à {0}. Le système a fixé cette limite à {1}. 
globalconfig.error.querysizetoolow = La limite minimum valide de taille de requêtes est 1.

# General useful expressions
general.anybody = N'importe qui
general.approve = Approuver
general.reject = Rejeter

# Profile resources
approval.profile.implementation.accumulative.approval.name = Approbation cumulée
approval.profile.implementation.partitioned.approval.name = Approbation partitionnée
approval.profile.metadata.field.checkbox = Case à cocher
approval.profile.metadata.field.freetext = Champ texte
approval.profile.metadata.field.integer = Nombre (court)
approval.profile.metadata.field.long = Nombre (long)
approval.profile.metadata.field.radio.button = Bouton radio
approval.profile.metadata.field.exturl = URL externe
approval.profile.store.add = Profil d'approbation {0} ajouté.
approval.profile.store.clone = Profil d'approbation {0} cloné en {1}.
approval.profile.store.clone.error.profile.name.exists = Le profil d'approbation ne peut pas être cloné: un profil de même nom {0} existe déjà.
approval.profile.store.edit = Profil d'approbation {0} modifié.
approval.profile.store.remove = Profil d'approbation {0} supprimé.
approval.profile.store.rename = Profil d'approbation {0} renommé en {1}.
profile.store.error.profile_with_id_exists = Le profil d'identifiant {0} existe déjà.
profile.store.error.profile_with_name_exists = Le profil de nom {0} existe déjà.
profile.store.error.profile_not_found = Le profil de nom {0} n'existe pas.

# Dynamic Properties
dynamic.property.validation.dateformat.failure = Le format de date ISO 8601 n'est pas valide ; la valeur était {0}. 
dynamic.property.validation.positiveinteger.failure     = La valeur doit être plus grande ou égale à 0 (zéro) ; elle était à {0}.
dynamic.property.validation.integertoosmall.failure 	= La valeur doit être plus grande ou égale à {0} ; elle était à {1}.
dynamic.property.validation.integertoobig.failure 		= La valeur doit être inférieure ou égale à {0} ; elle était à {1}.
dynamic.property.validation.stringtooshort.failure		= La valeur doit contenir au moins {0} caractères.
dynamic.property.validation.stringtoolong.failure		= La valeur doit contenir au plus {0} caractères.
dynamic.property.validation.stringnotascii.failure		= Le champ {0} ne doit contenir que des caractères ASCII.
dynamic.property.validation.stringnotbase64.failure		= La valeur du champ {0} doit être codée en Base64.
dynamic.property.validation.stringnotbase64url.failure	= La valeur du champ {0} doit être codée au format base64Url.
dynamic.property.validation.stringnotpem.failure		= La valeur doit être codée au format PEM (avec ou sans encapsulation '-----BEGIN/END [...]').

# Validators
validator.no_validator = Le validateur avec l'identifiant {0} n'existe pas.
validator.added_validator = Le validateur avec l'identifiant '{0}' a été ajouté.
validator.error.add_validator = Erreur durant l'ajout du validateur '{0}'.
validator.error.set_key_validator_exp_min = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour la valeur minimum de l'exposant de la clé publique.
validator.error.set_key_validator_exp_max = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour la valeur maximum de l'exposant de la clé publique.
validator.error.set_key_validator_fact_min = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour le plus petit facteur du module de la clé publique.
validator.error.set_key_validator_mod_min = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour la valeur minimum du module de la clé publique.
validator.error.set_key_validator_mod_max = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour la valeur maximum du module de la clé publique.
validator.error.set_key_validator_values_gui = Erreur d'enregistrement d'un validateur : la valeur '{0}' ne doit pas être négative pour '{1}'.
validator.changed_validator = Le validateur avec l'identifiant '{0}' a été modifié.
validator.error.change_validator = Erreur durant la modification du validateur {0}.
validator.cloned_validator = Nouveau validateur '{0}' utilisant le validateur '{1}' comme modèle.
validator.error.clone_validator = Erreur durant l'ajout du validateur '{0}' utilisant le validateur '{1}' comme modèle.
validator.removed_validator = Le validateur avec l'identifiant '{0}' a été supprimé.
validator.error.remove_validator = Erreur durant la suppression du validateur '{0}'.
validator.renamed_validator = Le validateur avec l'identifiant '{0}' a été renommé en '{1}'.
validator.errorrenamekeyvalidator = Erreur durant le renommage du validateur '{0}' en '{1}'.
validator.filterconditiondoesnotmatch = Le validateur avec l'identifiant '{0}' n'est pas traité, car la condition '{1}' ne correspond pas.
validator.caa.validation_failed = Le validateur CAA avec l'identifiant '{0}' a mis en échec l'émission des certificats de l'émetteur {1}, avec les messages : {2}.
validator.caa.validation_failed_error_page = Le validateur CAA avec l'identifiant '{0}' a mis en échec l'émission des certificats de l'émetteur {1}, non autorisé.
validator.caa.validation_successful = Le validateur CAA avec l'identifiant '{0}' a permit l'émission des certificats de l'émetteur {1}, avec les messages : {2}.
validator.domainblacklist.validation_failed = Le validateur par Liste de blocage de domaines '{0}' n'autorise pas les domaines suivants : {1}.
validator.domainblacklist.validation_successful = Le validateur par Liste de blocage de domaines '{0}' a permit l'émission de certificats.
validator.domainblacklist.info_text = Nombre d'entrées : {0} | Date de dépôt : {1} | SHA-256 : {2}
validator.domainallowlist.validation_failed = Le validateur par Liste d'autorisation de domaines '{0}' n'a pas autorisé les domaines suivants : {1}.
validator.domainallowlist.validation_successful = Le validateur par Liste d'autorisation de domaines '{0}' a permis l'émission d'un certificat.
validator.domainallowlist.info_text = Nombre d'entrées : {0} | Date de l'importation : {1} | SHA-256 : {2}
validator.key.isbeingprocessed = Traitement de la validation de clés avec le validateur '{0}' pour l'entité finale '{1}' et la clé publique d'empreinte {2}.
validator.key.validation_failed = Le validateur de clés avec l'identifiant '{0}' n'a pas pu valider un niveau de qualité suffisant pour la clé publique : {1}.
validator.key.validation_successful = Le validateur de clés avec l'identifiant '{0}' a validé un niveau de qualité suffisant pour la clé publique '{1}'.
validator.certificate.isbeingprocessed = Traitement de la validation de certificat avec le validateur '{0}', phase {1} pour l'entité finale '{2}' et la clé publique d'empreinte {3}.
validator.certificate.validation_failed = Le validateur de certificat d'identifiant '{0}' n'a pas pu valider le certificat avec la clé publique d'empreinte {1}.
validator.certificate.validation_successful = Le validateur de certificat d'identifiant '{0}' a validé avec succès le certificat avec la clé publique d'empreinte {1}.
validator.error.minimum_bigger = Erreur durant l'enregistrement du validateur : {0} est {1}, tandis que le maximum est {2}.
validator.error.minimum_bigger_log = Ne peut pas positionner la nouvelle valeur : le minimum est {0}, tandis que le maximum est {1}.
validator.safebrowsing.validation_successful = La vérification Safe Browsing a réussi.
validator.safebrowsing.validation_failed = La vérification Safe Browsing a échoué.

# Validator Implementations
validator.implementation.certificate.external = Validateur de certificat avec commande externe
validator.implementation.key.rsa = Validateur de clés RSA
validator.implementation.key.ecc = Validateur de clés ECC
validator.implementation.key.blacklist = Validateur par Liste de blocage de clés publiques
validator.implementation.dnsname.domainblacklist = Validateur par Liste de blocage de domaines
validator.implementation.dnsname.domainallowlist = Validateur par Liste d'autorisation de domaines
validator.implementation.dnsname.safebrowsing = Validateur de domaines Google Safe Browsing
validator.implementation.ee.caa = Validateur CAA

# External Command Certificate Validator
validator.certificate.externalcommand.testfilemissing = Le chemin du certificat de test n'existe pas.
validator.certificate.externalcommand.testfilenopermission = Impossible de lire le certificat de test '{0}'.

# Validator resources
validator.upgrade = Mise à jour d'un validateur avec la version {0}.
externalcertificatevalidator.upgrade = Mise à jour d'un validateur de certificat avec une commande externe avec la version {0}.
rsakeyvalidator.upgrade = Mise à jour d'un validateur de clés RSA avec la version {0}.
ecckeyvalidator.upgrade = Mise à jour d'un validateur de clés ECC avec la version {0}.
blacklistkeyvalidator.upgrade = Mise à jour d'un validateur par Liste de blocage de clés publiques avec la version {0}.

# Account binding resources
accountbinding.upgrade = Mise à jour d'un binding de compte avec la version {0}.
acme.eab.implementation.rfcCompliant	= Conforme RFC 8555 (MAC - clé symétrique)
acme.eab.implementation.withCertificate = Certificat / clé publique (signature de clé de compte asymétrique)

# ACME configuration resources
acmeconfiguration.upgrade = Mise à jour d'une configuration ACME avec la version {0}.
acmeaccount.upgrade = Mise à jour d'un compte ACME avec la version {0}.

# Process Resources
process.errortempfile = Écriture impossible dans le fichier temporaire.
process.errordeletetempfile = Impossible de supprimer le fichier temporaire {0}.
process.errorexternalapp = Erreurs détectées durant l'exécution de l'application externe {0}.
process.nocommand = Aucune commande externe fournie {0}.
process.commandnotfound = Impossible de trouver la commande externe {0}.
process.commandnopermission =  Impossible d'exécuter la commande externe {0}.
process.certificate.filenotfound = Impossible de trouver le fichier de certificat {0}.
process.certificate.couldnotbeparsed = Impossible de parser le fichier de certificat {0}.
process.certificate.couldnotbeencoded = Impossible de coder le certificat de test {0}.
process.whitelist.error.notlisted = Une liste d'autorisation a été activée, mais la commande '{0}' ne fait pas partie de cette liste d'autorisation.

# Peer Systems
peers.unknownhost = Pas possible de se connecter à l'hôte {0}, car le nom d'hôte n'est pas défini dans le fichier /etc/hosts, ou aucune adresse correspondante n'a pu être trouvée dans les DNS.
peers.invalidparameter = Paramètre de protocole invalide. Il est probable qu'il manque le chemin d'URL '/ejbca/peer/v1'.

# EOF
