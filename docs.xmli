<?xml version="1.0"?>

<project name="doc" default="doc" basedir=".">

    <description>
        Build documentation - XDocs and Javadoc.
        For building XDocs, edit xdocs/**/*.xml first.

        XXX for no apparent reason, your CWD must be the main Ant source dir, or this will fail:
        .../docs.xml:64: org.apache.velocity.exception.ResourceNotFoundException: Unable to find resource './site.vsl'
    </description>

	<property name="velocity.dir" location="lib/ext"/>
    <!-- Initialization properties -->
    <property name="project.name" value="ejbca"/>
    <property name="docs.tools.dest"    location="tmp/docs-tools"/>
    <property name="docs.src"     location="doc/xdocs/docs"/>
    <property name="docs.dest"    location="tmp/htdocs/docs"/>
    <property name="docs.dist"    location="doc/dist"/>
    <property name="docs.nojs.dest"    location="tmp/htdocs/docsnojs"/>
    <property name="docs.dest.ws" location="tmp/htdocs/docs/ws"/>
    <property name="docs.dest.rest" location="tmp/htdocs/docs/rest"/>
    <property name="docs.dest.acme" location="tmp/htdocs/docs/acme"/>
    <property name="docs.dest.logtypes" location="tmp/htdocs/docs/logtypes"/>
    <property name="site.src"     location="doc/xdocs/site"/>
    <property name="site.dest"    location="tmp/htdocs"/>
    <property name="jdocs.ws.tmp" location="tmp/jdocswstmp"/>
    <property name="ws.client.gen.relative-path" value="org/ejbca/core/protocol/ws/client/gen"/>
    <property name="client.ws.class" value="EjbcaWS"/>
    <property name="es.iface.dir" location="modules/edition-specific/src-interface/org/ejbca/core/protocol/ws/objects"/>
    <property name="ws.objects.dir" location="modules/ejbca-ws/src/org/ejbca/core/protocol/ws/objects"/>
    <property name="ws.common.dir" location="modules/ejbca-ws/src/org/ejbca/core/protocol/ws/common"/>
    <property name="ws.client.gen.src" location="modules/ejbca-ws-cli/src-gen"/>
    <property name="ws.master.file" location="${ws.common.dir}/IEjbcaWS.java"/>
    <property name="project.file" value="stylesheets/project.xml" />
    <property name="docs.templ.path"   location="${docs.src}/stylesheets" />
    <property name="site.templ.path"   location="${site.src}/stylesheets" />
    <property name="docs.velocity.props"   location="${docs.src}/velocity.properties" />
    <property name="site.velocity.props"   location="${site.src}/velocity.properties" />
    <property name="include.xml"  value="**/*.xml" />
   	<property file="src/doc.properties"/>
    <property name="confluence.url"  value="none" />
    <property name="confluence.port"  value="-1" />
	<path id="jdoc.classpath">
		<path location="dist/ejbca-common.jar" />
		<path location="modules/dist/ejbca-ejb.jar" />
        <path location="modules/dist/cesecore-common.jar"/>
        <path location="modules/dist/cesecore-entity.jar"/>
       	<path location="modules/dist/cesecore-ejb-interface.jar"/>
		<path location="lib/bcprov-jdk15on-160.jar" />
		<path location="lib/bcpkix-jdk15on-160.jar" />
    </path>
    
    <!-- =================================================================== -->
    <!-- Build doc part                                                                                                                             -->
    <!-- =================================================================== -->
	 <target name="doc.war" if="doc.war.enabled">
    	<antcall target="doc" />  	
		<war destfile="${dist.dir}/doc.war" webxml="${ejbca.home}/src/publicweb/empty_webxml.xml">
            <fileset dir="${docs.dest}" />
        </war>
    </target>
	
    <target name="doc-build-tool">
    	<mkdir dir="${docs.tools.dest}"/>
    	<javac srcdir="${ejbca.home}/modules/ejbca-common/src/" destdir="${docs.tools.dest}" debug="on" includeantruntime="no" encoding="UTF-8"
			includes="org/ejbca/util/JAXWSDocAndConvTools.java"/>
    </target>

    <target name="prepare">
        <path id="anakia.classpath">
            <fileset dir="${velocity.dir}">
                <include name="*.jar"/>
            </fileset>
        </path>
        <available classname="org.apache.velocity.anakia.AnakiaTask"
                   property="AnakiaTask.present">
            <classpath refid="anakia.classpath"/>
        </available>
        <available file="${site.velocity.props}"
                   property="site.present">
        </available>
    </target>

    <target name="prepare-error" depends="prepare" unless="AnakiaTask.present">
        <echo>
            AnakiaTask is not present! Please check to make sure that
            velocity.jar is in your classpath.
        </echo>
    </target>

	<condition property="update.from.confluence" value="true" else="false">
		<istrue value="${doc.update}"/>
    </condition>
    
    <condition property="connected.to.confluence" value="true" else="false">
    	<isreachable url="http://${confluence.url}" timeout="2"/>	
    </condition>

    <condition property="mod.rest-api.exists">
        <available file="${mod.ejbca-rest-api.path}/build.xml" />
    </condition>

    <condition property="mod.acme.exists">
        <available file="${mod.acme.path}/build.xml" />
    </condition>

	<target name="doc-confluence">
		<antcall target="doc-confluence-from-server"/>
		<antcall target="doc-confluence-copy-local"/>
	</target>
	
	<target name="doc-confluence-from-server" if="${update.from.confluence}">	
	    <delete dir="${docs.dest}" />
	    <mkdir dir="${docs.dest}"/>
	    
		<fail message="Could not contact Confluence Server at http://${confluence.url}:${confluence.port}">
			<condition>
	       		<isfalse value="${connected.to.confluence}"/>
	       	</condition>
		</fail>
		<echo message="Pulling documentation from Confluence Server"/>
		<!-- Perform a REST call to Confluence - only runs if -Ddoc.update is set and Confluence can be contacted -->
		<!-- The values here are described in doc.properties -->
		<get src="http://${confluence.url}:${confluence.port}/rest/scroll-html/1.0/sync-export?exportSchemeId=${confluence.export.schemed.id}&amp;rootPageId=${confluence.root.page.id}&amp;versionId=${confluence.version}" 
			dest="${docs.dest}/export.zip" 
			username="${confluence.username}"
			password="${confluence.password}"
			/>
		<unzip src="${docs.dest}/export.zip" dest="${docs.dest}"/>
		<delete file="${docs.dest}/export.zip"/>		
	</target>
	
	<target name="doc-confluence-copy-local" unless="${update.from.confluence}">
		<!-- Do not update from Confluence, instead copy in a placeholder file (if no documentation currently exists). -->
		<echo message="Using local documentation, if any. Set -Ddoc.update=true if you wish to update documentation from Confluence."/>		
		<mkdir dir="${docs.dest}"/>
		<copy todir="${docs.dest}">
        	<fileset dir="${docs.dist}" includes="**/*"/>
        </copy>
	</target>

	<target name="doc-external-deps" unless="external-deps-satfisfied">
		<antcall target="ejbca-common.jar"/>
	</target>
    
    <target name="site" if="site.present">
        <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask">
            <classpath refid="anakia.classpath"/>
        </taskdef>

        <anakia basedir="${site.src}" destdir="${site.dest}"
             extension=".html" style="./site.vsl"
             projectFile="${project.file}"
             excludes="**/stylesheets/**"
             includes="${include.xml}"
             lastModifiedCheck="true"
             templatePath="${site.templ.path}"
             velocityPropertiesFile="${site.velocity.props}">
        </anakia>
        
        <copy todir="${site.dest}">
        	<fileset dir="${site.src}" includes="**/*.css,**/*.png,**/*.jpg,**/*.gif,**/*.pdf"/>
        	<fileset dir="${site.src}" includes="sensornet/**/*"/>
        </copy>
    </target>
        
    <target name="doc" depends="prepare, doc-build-tool, doc-external-deps, site, doc-confluence, doc-rest, doc-acme" description="Build EJBCA inline ear file docs. Set -Ddoc.update=true to update documentation from PrimeKey's Confluence Server.">
        <echo message="WS=${ws.objects.dir}"/>
        <mkdir dir="${jdocs.ws.tmp}"/>
        <mkdir dir="${docs.dest.ws}"/>
	    <copy overwrite="yes" todir="${jdocs.ws.tmp}">
		  <fileset dir="${ws.client.gen.src}">
			<exclude name="**/${client.ws.class}.java"/>
			<exclude name="**/ObjectFactory.java"/>
		  </fileset>
	    </copy>
	    <copy overwrite="yes" file="${ws.objects.dir}/package.html" todir="${jdocs.ws.tmp}/${ws.client.gen.relative-path}"/>
	  	<java classname="org.ejbca.util.JAXWSDocAndConvTools" classpath="${docs.tools.dest}" failonerror="yes" fork="true" inputstring="">
	  	    <arg value="${ws.master.file}"/>
	  	    <arg value="${ws.client.gen.src}/${ws.client.gen.relative-path}/${client.ws.class}.java"/>
		    <arg value="${jdocs.ws.tmp}"/>
	  	</java>
	    <javadoc destdir="${docs.dest.ws}"
	             author="true"
	             version="true"
	             Package="false"
	             Use="false"
	             nodeprecated="true"
	             nodeprecatedlist="true"
	    	     classpathref="jdoc.classpath"
	             windowtitle="EJBCA WS">
	        <packageset dir="${jdocs.ws.tmp}"/>
	        <fileset dir="modules/cesecore-common/src" defaultexcludes="yes">
	          <include name="**/AlgorithmConstants.java"/>
	        </fileset>
	        <fileset dir="${es.iface.dir}" defaultexcludes="yes">
	          <include name="**/*ConstantsWS.java"/>
	        </fileset>
	        <fileset dir="${ws.common.dir}" defaultexcludes="yes">
	          <include name="**/CertificateHelper.java"/>
	          <include name="**/KeyStoreHelper.java"/>
	        </fileset>
	       <link offline="true" href="http://docs.oracle.com/javase/7/docs/api/" packagelistLoc="${env.JAVA_HOME}/docs/api"/>
	      <doctitle><![CDATA[<h1>EJBCA WS Support</h1>]]></doctitle>
	      <bottom><![CDATA[<i>2018 PrimeKey Solutions AB.</i>]]></bottom>
	    </javadoc>
        <mkdir dir="${docs.dest.logtypes}"/>
	    <javadoc destdir="${docs.dest.logtypes}"
	             author="false"
	             notree="true"
	             nohelp="true"
	             version="false"
	             Package="false"
	             Use="false"
	             nodeprecated="true"
	             nodeprecatedlist="true"
	    	     classpathref="jdoc.classpath"
	             windowtitle="EJBCA and CESeCore Audit Log types">
	        <fileset dir="modules/cesecore-common/src" defaultexcludes="yes">
	          <include name="org/cesecore/audit/enums/*Types.java"/>
	          <include name="org/cesecore/audit/enums/EventStatus.java"/>
	        </fileset>
	        <fileset dir="modules/ejbca-ejb-interface/src" defaultexcludes="yes">
	          <include name="org/ejbca/core/ejb/audit/enums/*Types.java"/>
	        </fileset>
	       <link offline="true" href="http://docs.oracle.com/javase/7/docs/api/" packagelistLoc="${env.JAVA_HOME}/docs/api"/>
	      <doctitle><![CDATA[<h1>EJBCA and CESeCore Audit Log types</h1>]]></doctitle>
	      <bottom><![CDATA[<i>2018 PrimeKey Solutions AB.</i>]]></bottom>
	    </javadoc>        
        <echo message="Local documentation is now available in file://${docs.dest}/index.html"/>
    </target>

    <target name="doc-rest" if="${mod.rest-api.exists}">
        <mkdir dir="${docs.dest.rest}"/>
        <java dir="${ejbca.home}" jar="${ejbca.home}/lib/ext/swagger docs/swagger-codegen-cli-2.3.1.jar" fork="true">
            <arg line="generate -i ${mod.ejbca-rest-api.path}/resources/swagger.json -l html2 -o ${docs.dest.rest}
            -t ${ejbca.home}/modules/ejbca-rest-api/htmlDocsTemplate"/>
        </java>
    </target>

    <target name="doc-acme" if="${mod.acme.exists}">
        <mkdir dir="${docs.dest.acme}"/>
        <java dir="${ejbca.home}" jar="${ejbca.home}/lib/ext/swagger docs/swagger-codegen-cli-2.3.1.jar" fork="true">
            <arg line="generate -i ${mod.acme.path}/resources/swagger.json -l html2 -o ${docs.dest.acme}
            -t ${ejbca.home}/modules/ejbca-rest-api/htmlDocsTemplate"/>
        </java>
    </target>
    
    <target name="docpiwik" depends="doc" description="Build EJBCA site docs including piwik webstats">
    <!-- Replaced the token for Piwik tracking script in the built documentation. 
         This is excluded in the doc included in ejbca.ear, but included for the doc built for the website.
         Must use ISO-8859-1 encoding, otherwise items like &#174; will be replaced by UTF-8 mumbo jumbo -->
      <replace dir="${docs.dest}" token="!--Piwik--" encoding="ISO-8859-1">
        <replacevalue><![CDATA[script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://stat.primekey.se/piwik/" : "http://stat.primekey.se/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 5);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script><noscript><p><img src="//stat.primekey.se/piwik/piwik.php?idsite=5" style="border:0" alt=""></p></noscript]]>
        </replacevalue>
      </replace>
    </target>
    
    <target name="gen-depgraph" depends="ejbca.ear" description="Generate EJB dependecy graph using external 'dot' application">
    	<condition property="isjboss" value="isset"><equals arg1="jboss" arg2="${appserver.type}"/></condition>
    	<fail unless="isjboss" message="This target only works for JBoss AS."/>
    	<property name="gen-depgraph.dir" value="${ejbca.home}/tmp/gen-dep"/>
    	<mkdir dir="${gen-depgraph.dir}"/>
    	<path id="gen-dep.classpath">
    	    <!-- for javax.ejb.Stateless, Local and EJB-->
    		<fileset dir="${ejbca.home}/lib/jee" includes="javaee-api-6.0-*.jar"/>
    		<fileset dir="${ejbca.home}/lib" includes="log4j*.jar" />
    	</path>
    	<javac srcdir="${ejbca.home}/modules/ejbca-ejb/src" destdir="${gen-depgraph.dir}" classpathref="gen-dep.classpath" encoding="UTF-8" debug="on" includeantruntime="false"
    		includes="org/ejbca/util/EjbDependencyGraphTool.java"/>
       	<path id="gen-dep.classpath.run">
       		<path refid="gen-dep.classpath"/>
       		<path location="${gen-depgraph.dir}"/>
       	</path>
    	<java classname="org.ejbca.util.EjbDependencyGraphTool" classpathref="gen-dep.classpath.run" failonerror="true">
    		<arg line="${ejbca.home}/dist/ejbca.ear ${gen-depgraph.dir}/ejbca_${app.version.number}.dot"/>
    	</java>
    	<echo message="file://${gen-depgraph.dir}/ejbca_${app.version.number}.dot was written."/>
    	<echo message="file://${gen-depgraph.dir}/ejbca_${app.version.number}.dot was written."/>
    	<exec executable="dot" failonerror="true">
    		<arg line="-Tpng -o ${gen-depgraph.dir}/ejbca_${app.version.number}.png ${gen-depgraph.dir}/ejbca_${app.version.number}.dot"/>
    	</exec>
    	<echo message="file://${gen-depgraph.dir}/ejbca_${app.version.number}.png was created."/>
    </target>
	
</project>
