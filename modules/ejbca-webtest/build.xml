<?xml version="1.0" encoding="UTF-8"?>
<project name="webtest" default="build">
	<description>
		Standalone web tests interacting with EJBCA
	</description>

	<dirname property="webtest.dir" file="${ant.file.webtest}"/>

    <import file="${webtest.dir}/../build-helpers.xml"/>
	<import file="${webtest.dir}/../systemtests/build.xml"/>
	
	<property name="webtest.build.dir" location="${webtest.dir}/build"/>
	<property name="webtest.build-test.dir" location="${webtest.dir}/build-test"/>
	<property name="webtest.src.dir" location="${webtest.dir}/src"/>
	<property name="webtest.src-test.dir" location="${webtest.dir}/src-test"/>
	<property name="webtest.resources.dir" location="${webtest.dir}/resources"/>
	<property name="webtest.resources-test.dir" location="${webtest.dir}/resources-test"/>
	<property name="webtest.conf.dir" location="${webtest.dir}/conf"/>
	<property name="webtest.lib.webtest-selenium" value="${webtest.dir}/../../lib/ext/webtest/selenium"/>
    <!-- Shared library for selenium from lib/ -->
    <path id="lib.guava.classpath">
        <fileset dir="${webtest.dir}/../../lib" includes="guava-*.jar"/>
    </path>
	<property name="webtest.lib.webtest-report" value="${webtest.dir}/../../lib/ext/webtest/report"/>
    <!-- Shared libraries for reporting from lib/ -->
    <path id="lib.hc.classpath">
        <fileset dir="${webtest.dir}/../../lib" includes="httpclient-*.jar httpmime-*.jar"/>
    </path>
	<property name="webtest.lib.webtest-geckodriver-version" value="v0.26.0"/>
	<property name="reports.dir" value="${webtest.dir}/../../reports"/>
	
	<path id="compile.classpath">
		<path refid="lib.commons-lang.classpath"/>
		<fileset dir="${webtest.lib.webtest-selenium}" includes="*.jar"/>
        <path refid="lib.guava.classpath"/>
		<fileset dir="${webtest.lib.webtest-report}" includes="*.jar"/>
        <path refid="lib.hc.classpath"/>
		<path refid="systemtests.classpath.nojee"/>
	</path>
	
	<path id="test.classpath">
		<path refid="compile.classpath"/>
		<path refid="common.classpath"/>
		<path location="${webtest.build.dir}/classes"/>
		<path location="${webtest.build-test.dir}"/>
		<path location="${webtest.build.dir}/conf"/>
		<path location="${webtest.build.dir}/resources"/>
	</path>

	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isMac">
		<os family="mac" />
	</condition>

	<condition property="isLinux">
		<and>
			<os family="unix"/>
			<not>
				<os family="mac"/>
			</not>
		</and>
	</condition>

	<target name="make_directories">
		<echo message="Came into make_directories target" />
		<mkdir dir="${webtest.build.dir}/classes"/>
		<mkdir dir="${webtest.build.dir}/conf"/>
		<mkdir dir="${webtest.build.dir}/resources"/>
	</target>

	<target name="build" depends="make_directories, copyWindows, copyMac, copyLinux">
        <javac srcdir="${webtest.src.dir}" destdir="${webtest.build.dir}/classes" debug="on" includeantruntime="no" encoding="iso8859-1">
            <classpath refid="compile.classpath"/>
        </javac>
    	<copy todir="${webtest.build.dir}/conf" failonerror="true">
            <fileset dir="${webtest.conf.dir}"/>
		</copy>
	</target>

	<target name="copyWindows" if="isWindows">
		<echo message="Using geckodriver for Windows" />
		<copy file="${webtest.resources.dir}/geckodriver-${webtest.lib.webtest-geckodriver-version}-win64.exe" tofile="${webtest.build.dir}/resources/geckodriver" failonerror="true"/>
	</target>

	<target name="copyMac" if="isMac">
		<echo message="Using geckodriver for Mac" />
		<exec executable="cp" failonerror="true">
			<arg line="-R ${webtest.resources.dir}/geckodriver-${webtest.lib.webtest-geckodriver-version}-macos ${webtest.build.dir}/resources/geckodriver"/>
		</exec>
	</target>

	<target name="copyLinux" if="isLinux">
		<echo message="Using geckodriver for Linux" />
		<exec executable="cp" failonerror="true">
			<arg line="-R ${webtest.resources.dir}/geckodriver-${webtest.lib.webtest-geckodriver-version}-linux64 ${webtest.build.dir}/resources/geckodriver"/>
		</exec>
	</target>

    <target name="compile-tests" depends="build">
    	<mkdir dir="${webtest.build-test.dir}"/>
		<javac srcdir="${webtest.src-test.dir}" destdir="${webtest.build-test.dir}" debug="on" includeantruntime="no"
        	encoding="UTF-8" classpathref="test.classpath"/>
		<copy todir="${webtest.build-test.dir}" failonerror="true">
			<file basedir="${webtest.resources.dir}" name="log4j.properties" />
			<!-- Copy test resources -->
			<fileset dir="${webtest.resources-test.dir}" includes="*" excludes="readme.txt"/>
		</copy>
    </target>

	<target name="test" depends="compile-tests" description="Run all tests for this module">
		<junit printsummary="yes" haltonfailure="no" showoutput="${test.showoutput}" enableTestListenerEvents="true">
			<classpath>
        		<path refid="test.classpath"/>
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
                <fileset dir="${webtest.build-test.dir}" includes="**/EcaQa*.class" excludes="**/*EcaQa*$*"/>
            </batchtest>
			<jvmarg line="${tests.jvmargs}"/>
			<jvmarg value="-Dlog4j.configuration=log4j.properties"/>
		</junit>
    </target>
	
	<target name="runone" depends="compile-tests">
		<fail message="'test.runone' is not set. Example -Dtest.runone=EcaQa64_PublicWebMenuItems . You can also use -Dtest.showoutput=true to send test output to console." unless="test.runone" />
		<condition property="remoteDebugJvmArgs"
				   value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8787"
				   else="-ea">
			<istrue value="${remoteDebug}"/>
		</condition>
		<junit printsummary="yes" haltonfailure="no" showoutput="${test.showoutput}" enableTestListenerEvents="true">
			<classpath>
        		<path refid="test.classpath"/>
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${webtest.build-test.dir}">
					<include name="**/${test.runone}.class" />
				</fileset>
			</batchtest>
			<jvmarg line="${tests.jvmargs}"/>
			<jvmarg value="${remoteDebugJvmArgs}"/>
			<jvmarg value="-Dlog4j.configuration=log4j.properties"/>
		</junit>
	</target>
	
	<target name="clean" description="Clean up this module">
		<delete dir="${webtest.build.dir}" />
		<delete dir="${webtest.build-test.dir}"/>
		<delete file="${reports.dir}/test/html/QaEjbcaTestReport.html" />
	</target>

	<target name="cleanReports" description="Clean up this module's reports">
		<delete file="${reports.dir}/test/html/QaEjbcaTestReport.html" />
	</target>
</project>
