/*************************************************************************
 *                                                                       *
 *  EJBCA Community: The OpenSource Certificate Authority                *
 *                                                                       *
 *  This software is free software; you can redistribute it and/or       *
 *  modify it under the terms of the GNU Lesser General Public           *
 *  License as published by the Free Software Foundation; either         *
 *  version 2.1 of the License, or any later version.                    *
 *                                                                       *
 *  See terms of license at gnu.org.                                     *
 *                                                                       *
 *************************************************************************/
package org.ejbca.webtest.scenario;

import java.util.Arrays;
import org.ejbca.webtest.WebTestBase;
import org.ejbca.webtest.helper.AuditLogHelper;
import org.ejbca.webtest.helper.EndEntityProfileHelper;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class EcaQa10_EndEntityProfileManagement extends WebTestBase{
    //Classes
    private static WebDriver webDriver;
    private static EndEntityProfileHelper endEntityProfileHelper;
    private static AuditLogHelper auditLogHelper;
    
    //Test Data
    private static String END_ENTITY_PROFILE_NAME = "ECAQA10-EndEntityProfile";
    private static String RENAMED_END_ENTITY_PROFILE_NAME = "MyEndEntityProfile";
    private static String CLONED_END_ENTITY = "TestEndEntityProfileFromTemplate";
    
    private static final By AUDITLOG_CLONE_ADDED_XPATH = By.xpath("//span[contains(text(),'Added new end entity profile "+CLONED_END_ENTITY+" using profile "+END_ENTITY_PROFILE_NAME+" as template.')]");
    private static final By AUDITLOG_DETAILS_EDIT_XPATH = By.xpath("//span[contains(text(),'msg=End entity profile "+END_ENTITY_PROFILE_NAME+" edited')]");
    private static final By AUDITLOG_DETAILS_RENAMED_XPATH = By.xpath("//span[contains(text(),'End entity profile "+CLONED_END_ENTITY+" renamed to "+RENAMED_END_ENTITY_PROFILE_NAME+"')]");
    private static final By AUDITLOG_DETALS_REMOVED_XPATH = By.xpath("//td[contains(text(),'End entity profile MyEndEntityProfile removed')]");
                                                                            
    @BeforeClass
    public static void init() {
        beforeClass(true, null);
        webDriver = getWebDriver();
        endEntityProfileHelper = new EndEntityProfileHelper(webDriver);
        auditLogHelper = new AuditLogHelper(webDriver);
        auditLogHelper.initFilterTime();
    }
    
    @AfterClass
    public static void exit() {
        cleanup();
        afterClass();
    }
    
    @Test
    public void testA_NewEndEntityProfileAdded() {
        endEntityProfileHelper.openPage(getAdminWebUrl());
        endEntityProfileHelper.addEndEntityProfile(END_ENTITY_PROFILE_NAME);
        endEntityProfileHelper.openEditEndEntityProfilePage(END_ENTITY_PROFILE_NAME);
        endEntityProfileHelper.triggerUsernameAutoGenerated();
        endEntityProfileHelper.saveEndEntityProfile(); 
    }
    
    @Test
    public void testB_EditEndEntityProfile() {
        endEntityProfileHelper.openEditEndEntityProfilePage(END_ENTITY_PROFILE_NAME);
        endEntityProfileHelper.assertUsernameAutoGeneratedIsSelected(true);
        endEntityProfileHelper.triggerBackToEndEntityProfiles();
    }
    
    @Test 
    public void testC_CheckEntityProfileHasBeenEdited() {
        auditLogHelper.openPage(getAdminWebUrl()); 
        auditLogHelper.reloadView();
        WebElement addedElement = webDriver.findElement(AUDITLOG_DETAILS_EDIT_XPATH);
        auditLogHelper.assertLogEntryByEventText("End Entity Profile Edit", "Success", null  
                                ,Arrays.asList(addedElement.getText()));
    }
    
    @Test 
    public void testD_CloneEntityProfile() {
        endEntityProfileHelper.openPage(getAdminWebUrl());
        endEntityProfileHelper.cloneEndEntityProfile(END_ENTITY_PROFILE_NAME, CLONED_END_ENTITY);
        endEntityProfileHelper.assertEndEntityProfileNameExists(END_ENTITY_PROFILE_NAME); 
    }

    @Test
    public void testE_CheckCloneEntityProfileHasBeenAdded() {
        auditLogHelper.openPage(getAdminWebUrl());
        auditLogHelper.reloadView();
        WebElement addedElement = webDriver.findElement(AUDITLOG_CLONE_ADDED_XPATH);
        auditLogHelper.assertLogEntryByEventText("End Entity Profile Add", "Success", null
                ,Arrays.asList(addedElement.getText()));
    }
    
    @Test
    public void testF_ChangeClonedEntityProfileName() {
        endEntityProfileHelper.openPage(getAdminWebUrl());
        endEntityProfileHelper.renameEndEntityProfile(CLONED_END_ENTITY, RENAMED_END_ENTITY_PROFILE_NAME);
    }
    
    @Test
    public void testG_CheckClonedEntityProfileRename() {
        auditLogHelper.openPage(getAdminWebUrl());
        WebElement addedElement = webDriver.findElement(AUDITLOG_DETAILS_RENAMED_XPATH);
        auditLogHelper.assertLogEntryByEventText("End Entity Profile Rename", "Success", null
                ,Arrays.asList(addedElement.getText()));
    }
    
    @Test
    public void testH_CancelDeleteEntityProfile() {
        endEntityProfileHelper.openPage(getAdminWebUrl());
        endEntityProfileHelper.deleteEndEntityProfile(RENAMED_END_ENTITY_PROFILE_NAME);
        endEntityProfileHelper.confirmEndEntityProfileDeletion(false);
        endEntityProfileHelper.assertEndEntityProfileNameExists(RENAMED_END_ENTITY_PROFILE_NAME);
    }
    
    @Test
    public void testI_DeleteEntityProfile() {
        endEntityProfileHelper.openPage(getAdminWebUrl());
        endEntityProfileHelper.deleteEndEntityProfile(RENAMED_END_ENTITY_PROFILE_NAME);
        endEntityProfileHelper.confirmEndEntityProfileDeletion(true);
        endEntityProfileHelper.assertEndEntityProfileNameDoesNotExist(RENAMED_END_ENTITY_PROFILE_NAME);
    }
    
    @Test
    public void testJ_CheckEntityProfileRemove() {
        auditLogHelper.openPage(getAdminWebUrl());
        WebElement addedElement = webDriver.findElement(AUDITLOG_DETALS_REMOVED_XPATH);
        auditLogHelper.assertLogEntryByEventText("End Entity Profile Remove", "Success", null
                ,Arrays.asList(addedElement.getText()));
    }
    
    private static void cleanup() {
        // Remove generated artifacts
        removeEndEntityProfileByName(END_ENTITY_PROFILE_NAME);
        removeEndEntityByUsername(RENAMED_END_ENTITY_PROFILE_NAME);
        removeEndEntityByUsername(CLONED_END_ENTITY);
    }
}
