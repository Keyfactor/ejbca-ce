<?xml version="1.0" encoding="UTF-8"?>
<project name="ejbca-ws-cli" default="build">
    <description>
		The EJBCA Web Services Command Line Interface
    </description>

	<dirname property="this.dir" file="${ant.file.ejbca-ws-cli}"/>
	<import file="${this.dir}/../build.xml"/>
	<import file="${this.dir}/../systemtests/build.xml"/>
	
	<property name="build.dir" location="${this.dir}/build"/>
	<property name="build-test.dir" location="${this.dir}/build-test"/>
	<property name="src.dir" location="${this.dir}/src"/>
	<property name="src-test.dir" location="${this.dir}/src-test"/>
	<property name="src-gen.dir" location="${this.dir}/src-gen"/>
	<property name="resources.dir" location="${this.dir}/resources"/>

	<path id="compile.classpath">
		<path refid="lib.ejbca-common.classpath"/>
		<pathelement location="${mod.ejbca-ws.lib}" /> 
		<path refid="lib.cert-cvc.classpath"/>
		<path refid="lib.bouncycastle.classpath"/>
		<path refid="lib.log4j.classpath"/>
		<path refid="lib.commons-lang.classpath"/>
		<path refid="lib.commons-collections.classpath"/>
		<path refid="lib.commons-config.classpath"/>
		<path refid="lib.commons-logging.classpath"/>
		<path location="${mod.cesecore-entity.lib}"/>
		<path location="${mod.cesecore-ejb-interface.lib}"/>
	</path>

	<path id="test.classpath">
		<path refid="compile.classpath"/>
		<path refid="systemtests.classpath.nojee"/>
		<path refid="common.classpath"/>
		<path location="${build.dir}/classes"/>
		<path location="${build-test.dir}"/>
		<path location="${build.dir}/conf"/>
		<path location="${build.dir}/resources"/>
	</path>
	
	<path id="compile-withws.classpath">
		<path refid="compile.classpath"/>
	</path>

    <target name="build" description="Build this module" depends="compile, setup">
    	<pathconvert property="ejbca-ws-cli.dependencies" pathsep=" ">
    	    <path>
	        	<fileset dir="${mod.ejbca-ws-cli.dist}" includes="lib/*.jar"/>
    	    </path>
    		<map from="${mod.ejbca-ws-cli.dist}/" to=""/>
    	</pathconvert>
    	<jar destfile="${mod.ejbca-ws-cli.lib}">
            <manifest>
    			<attribute name="Class-path" value="${ejbca-ws-cli.dependencies} ./" />
				<attribute name="Main-Class" value="org.ejbca.core.protocol.ws.client.ejbcawsracli"/>
            </manifest>
        	<fileset dir="${build.dir}" includes="**"/>
    	</jar>
        <!-- Also make a jar file with no Class-path inside it, this is used when including the client lib in an ear file
             where the class path is set by the container -->
    	<jar destfile="${mod.ejbca-ws-client.lib}">
        	<fileset dir="${build.dir}" includes="**"/>
    	</jar>
    </target>

	<target name="compile-tests" depends="build, with.clover">
    	<mkdir dir="${build-test.dir}"/>
		<javac srcdir="${src-test.dir}" destdir="${build-test.dir}" debug="on" includeantruntime="no"
        	encoding="UTF-8" classpathref="test.classpath"/>
    </target>
	
	<target name="test" depends="compile-tests" description="Run all tests for this module">
		<junit printsummary="yes" haltonfailure="no" dir="${this.dir}">
			<classpath>
        		<path refid="test.classpath"/>
				<pathelement path="${clover.jar}"/>
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
                <fileset dir="${build-test.dir}" includes="**/EcaQa*.class"/>
            </batchtest>
		</junit>
    </target>
	
	<target name="runone" depends="compile-tests">
		<fail message="'test.runone' is not set. Example -Dtest.runone=EcaQa64_PublicWebMenuItems" unless="test.runone" />
		<junit printsummary="yes" haltonfailure="no" >
			<classpath>
        		<path refid="test.classpath"/>
				<pathelement path="${clover.jar}"/>
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${build-test.dir}">
					<include name="**/${test.runone}.class" />
				</fileset>
			</batchtest>
		</junit>
		<antcall target="clean"/>
	</target>
	
    <target name="clean" description="Clean up this module">
		<delete dir="${build.dir}" />
		<delete dir="${mod.ejbca-ws-cli.dist}" />
		<delete file="${mod.ejbca-ws.wsdl}" />
		<delete dir="${build-test.dir}"/>
    </target>
	
    <target name="compile-external-deps" unless="external-deps-satfisfied"><antcall target="ejbca-ws-common"/></target>
    <target name="compile" depends="compile-external-deps, with.clover">
    	<mkdir dir="${build.dir}" />
        <javac destdir="${build.dir}" debug="on" includeantruntime="no"
        	encoding="UTF-8" target="${java.target.version}" classpathref="compile-withws.classpath">
        	<src path="${src-gen.dir}"/>
        	<src path="${src.dir}"/>
    	</javac>
    </target>
	
	<target name="overwritegenerated">
		<!-- Verify that the generated class is a true subset of the handwritten class -->
	  	<java classname="org.ejbca.util.JAXWSDocAndConvTools" 
	  		  classpath="${mod.ejbca-common.lib}"
	  		  failonerror="yes"
	  		  fork="true">
	  	    <arg value="${mod.ejbca-ws.path}/src/org/ejbca/core/protocol/ws/objects/${class}.java"/>
	  	    <arg value="${src-gen.dir}/org/ejbca/core/protocol/ws/client/gen/${class}.java"/>
	  	</java>
		<!-- It was, overwrite the generated class to get constants, JavaDoc and additional methods -->
		<copy overwrite="true" 
			  file="${mod.ejbca-ws.path}/src/org/ejbca/core/protocol/ws/objects/${class}.java" 
			  todir="${src-gen.dir}/org/ejbca/core/protocol/ws/client/gen"/>
		<!-- Fix the package name -->
		<replace file="${src-gen.dir}/org/ejbca/core/protocol/ws/client/gen/${class}.java"
			     token="package org.ejbca.core.protocol.ws.objects;"
			     value="package org.ejbca.core.protocol.ws.client.gen;"/>
	</target>

    <target name="generate-external-deps" unless="external-deps-satfisfied"><antcall target="ejbca-ws-wsdl"/></target>
    <target name="generate" depends="generate-external-deps" description="Generate WS client stubs from implementation">
		<available file="${mod.ejbca-ws.wsdl}" property="wsdl.present"/>
		<fail unless="wsdl.present" message="Generation of client side Web Services code requires ${mod.ejbca-ws.wsdl} to be present."/>
		<delete><fileset dir="${src-gen.dir}" includes="**"></fileset></delete>
		<mkdir dir="${build.dir}" />
		<exec command="${java.home}/../bin/wsimport" failonerror="true">
			<arg line="-s ${src-gen.dir} -d ${build.dir} -p org.ejbca.core.protocol.ws.client.gen -keep ${mod.ejbca-ws.wsdl}"/>
		</exec>
        <antcall target="overwritegenerated">
           <param name="class" value="Certificate"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="CertificateResponse"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="HardTokenDataWS"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="KeyStore"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="NameAndId"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="PinDataWS"/>
    	</antcall>
        <antcall target="overwritegenerated">
          <param name="class" value="RevokeStatus"/>
        </antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="TokenCertificateRequestWS"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="TokenCertificateResponseWS"/>
    	</antcall>
    	<antcall target="overwritegenerated">
           <param name="class" value="UserDataSourceVOWS"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="UserDataVOWS"/>
    	</antcall>
        <antcall target="overwritegenerated">
           <param name="class" value="UserMatch"/>
    	</antcall>
    	<antcall target="overwritegenerated">
           <param name="class" value="ExtendedInformationWS"/>
    	</antcall>
		<delete dir="${build.dir}" />	<!-- Since we cannot specify the target java version we have to recompile -->
    </target>

    <target name="setup">
    	<mkdir dir="${mod.ejbca-ws-cli.dist}/lib" />
    	<pathconvert property="compile.classpath.property" pathsep=" ">
    	    <path refid="compile.classpath" />
    		<map from="${ejbca.home}/" to=""/>
    	</pathconvert>
    	<copy todir="${mod.ejbca-ws-cli.dist}/lib" flatten="true">
    		<fileset dir="${ejbca.home}" includes="${compile.classpath.property}"/>
    	</copy>
    	<!--
    	<pathconvert property="lib.jaxws-client.classpath.property" pathsep=" ">
    	    <path refid="lib.jaxws-client.classpath" />
    		<map from="${ejbca.home}/" to=""/>
    	</pathconvert>
    	<copy todir="${mod.ejbca-ws-cli.dist}/lib/endorsed" flatten="true">
    		<fileset dir="${ejbca.home}" includes="${lib.jaxws-client.classpath.property}"/>
    	</copy>
    	-->
    	<copy todir="${mod.ejbca-ws-cli.dist}" flatten="true">
    		<fileset dir="${this.dir}/resources" includes="**"/>
    	</copy>
        <copy file="${log4j.cli.file}" tofile="${mod.ejbca-ws-cli.dist}/log4j.xml" failonerror="true"/>
        <copy file="${ejbca.home}/src/java/defaultvalues.properties" tofile="${mod.ejbca-ws-cli.dist}/defaultvalues.properties" failonerror="true"/>
        <chmod file="${mod.ejbca-ws-cli.dist}/*.sh" perm="a+rx"/>
    </target>
</project>
