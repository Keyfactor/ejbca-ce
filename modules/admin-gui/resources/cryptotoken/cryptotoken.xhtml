<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<ui:remove>
	<!--
    /*************************************************************************
     *                                                                       *
     *  EJBCA: The OpenSource Certificate Authority                          *
     *                                                                       *
     *  This software is free software; you can redistribute it and/or       *
     *  modify it under the terms of the GNU Lesser General Public           *
     *  License as published by the Free Software Foundation; either         *
     *  version 2.1 of the License, or any later version.                    *
     *                                                                       *
     *  See terms of license at gnu.org.                                     *
     *                                                                       *
     *************************************************************************/
     
     $Id$
     -->
</ui:remove>
<ui:composition template="/WEB-INF/include/template.xhtml">
	<ui:define name="content">
		<h1>
			<h:outputText value="#{web.text.CRYPTOTOKEN_NEW}"
				rendered="#{cryptoTokenMBean.currentCryptoTokenId == 0}" />
			<h:outputText
				value="#{web.text.CRYPTOTOKEN} : #{cryptoTokenMBean.currentCryptoToken.name}"
				rendered="#{cryptoTokenMBean.currentCryptoTokenId != 0}" />
		</h1>
		<h:form id="currentCryptoTokenForm">
			<h:panelGrid columns="2">
				<h:panelGroup>
					<h:outputLink rendered="#{cryptoTokenMBean.paramRef eq 'default'}"
						value="cryptotokens.jsf">
						<h:outputText value="#{web.text.CRYPTOTOKEN_NAV_BACK}" />
					</h:outputLink>
					<h:outputLink
						rendered="#{cryptoTokenMBean.paramRef eq 'caactivation'}"
						value="../ca/caactivation.xhtml">
						<h:outputText value="#{web.text.CRYPTOTOKEN_NAV_BACK_ACT}" />
					</h:outputLink>
				</h:panelGroup>
				<h:commandButton
					action="#{cryptoTokenMBean.toggleCurrentCryptoTokenEditMode}"
					value="#{web.text.CRYPTOTOKEN_NAV_EDIT}"
					rendered="#{(!cryptoTokenMBean.currentCryptoTokenEditMode) &amp;&amp; cryptoTokenMBean.allowedToModify}" />
				<h:panelGroup id="placeholder1"
					rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode || !cryptoTokenMBean.allowedToModify}" />

				<h:outputLabel for="currentCryptoTokenId"
					value="#{web.text.CRYPTOTOKEN_ID}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId != 0}" />
				<h:outputText id="currentCryptoTokenId"
					value="#{cryptoTokenMBean.currentCryptoTokenId}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId != 0}" />

				<h:outputLabel for="currentCryptoTokenName"
					value="#{web.text.CRYPTOTOKEN_NAME}" />
				<h:panelGroup id="currentCryptoTokenName">
					<h:inputText value="#{cryptoTokenMBean.currentCryptoToken.name}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}"
						size="45" title="#{web.text.FORMAT_ID_STR}" 
						id="currentCryptoTokenNameText"/>
					<h:outputText value="#{cryptoTokenMBean.currentCryptoToken.name}"
						rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:outputLabel for="currentCryptoTokenType"
					value="#{web.text.CRYPTOTOKEN_TYPE}" />
				<h:panelGroup id="currentCryptoTokenType">
					<h:panelGroup
						rendered="#{cryptoTokenMBean.currentCryptoTokenId == 0}">
						<h:selectOneMenu id="selectOneMenuType"
							value="#{cryptoTokenMBean.currentCryptoToken.type}"
							onchange="document.getElementById('currentCryptoTokenForm:selectCryptoTokenType').click();">
							<f:selectItems
								value="#{cryptoTokenMBean.availableCryptoTokenTypes}" />
						</h:selectOneMenu>
						<h:commandButton id="selectCryptoTokenType"
							action="#{cryptoTokenMBean.selectCryptoTokenType}" value="Update" />
						<script>
							document
									.getElementById('currentCryptoTokenForm:selectCryptoTokenType').style.display = 'none';
						</script>
					</h:panelGroup>
					<h:outputText value="#{cryptoTokenMBean.currentCryptoToken.type}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenId != 0}" />
				</h:panelGroup>

				<h:outputLabel for="currentCryptoTokenReferenced"
					value="#{web.text.CRYPTOTOKEN_REFDHEAD}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId!=0}" />
				<h:selectBooleanCheckbox id="currentCryptoTokenReferenced"
					value="#{cryptoTokenMBean.currentCryptoToken.referenced}"
					disabled="true"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId!=0}" />

				<h:outputLabel for="currentCryptoTokenActive"
					value="#{web.text.CRYPTOTOKEN_ACTIVE}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId!=0}" />
				<h:selectBooleanCheckbox id="currentCryptoTokenActive"
					value="#{cryptoTokenMBean.currentCryptoToken.active}"
					disabled="true"
					rendered="#{cryptoTokenMBean.currentCryptoTokenId!=0}" />

				<h:outputLabel for="currentCryptoTokenSecret1"
					value="#{web.text.CRYPTOTOKEN_PIN}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" />
				<h:panelGroup
					rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}">
					<h:inputSecret id="currentCryptoTokenSecret1"
						value="#{cryptoTokenMBean.currentCryptoToken.secret1}" size="20"
						autocomplete="off" title="#{web.text.CRYPTOTOKEN_PIN}" />
					<h:panelGroup styleClass="help">
						<h:outputText value=" #{web.text.CRYPTOTOKEN_PIN_NOTICE}"
							rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}" />
					</h:panelGroup>
				</h:panelGroup>
				<h:outputLabel for="currentCryptoTokenSecret2"
					value="#{web.text.CRYPTOTOKEN_PIN_REPEAT}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" />
				<h:inputSecret id="currentCryptoTokenSecret2"
					value="#{cryptoTokenMBean.currentCryptoToken.secret2}"
					rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" size="20"
					autocomplete="off" title="#{web.text.CRYPTOTOKEN_PIN}" />

				<h:outputLabel for="currentCryptoTokenAutoActivate"
					value="#{web.text.CRYPTOTOKEN_AUTO}" />
				<h:panelGroup>
					<h:selectBooleanCheckbox id="currentCryptoTokenAutoActivate"
						value="#{cryptoTokenMBean.currentCryptoToken.autoActivate}"
						disabled="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
					<h:outputLabel for="currentCryptoTokenAutoActivate"
						value="#{web.text.USE}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:panelGroup id="allowExplicitParameters">
					<h:outputLabel id="allowExplicitParametersLabel"
						for="currentCryptoTokenAllowExplicitParameters"
						value="#{web.text.CRYPTOTOKEN_USEEXPLICITKEYPARAMETERS} " />
					<h:outputText value="#{web.ejbcaWebBean.getHelpReference('/Crypto_Tokens_Overview.html')}" escape="false"/>
				</h:panelGroup>
				<h:panelGroup>
					<h:selectBooleanCheckbox
						id="currentCryptoTokenAllowExplicitParameters"
						value="#{cryptoTokenMBean.currentCryptoToken.allowExplicitParameters}"
						disabled="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
					<h:outputLabel for="currentCryptoTokenAllowExplicitParameters"
						value="#{web.text.USE}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:panelGroup id="currentCryptoTokenAllowExportPrivateKeyPanelGroup"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showSoftCryptoToken}">
					<h:outputLabel id="currentCryptoTokenAllowExportPrivateKeyLabel"
						for="currentCryptoTokenAllowExportPrivateKey"
						value="#{web.text.CRYPTOTOKEN_ALLOWEXPORT} " />
					<h:outputText value="#{web.ejbcaWebBean.getHelpReference('/Crypto_Tokens_Overview.html')}" escape="false"/>
				</h:panelGroup>
				<h:panelGroup
					rendered="#{cryptoTokenMBean.currentCryptoToken.showSoftCryptoToken}">
					<h:selectBooleanCheckbox
						id="currentCryptoTokenAllowExportPrivateKey"
						value="#{cryptoTokenMBean.currentCryptoToken.allowExportPrivateKey}"
						disabled="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
					<h:outputLabel for="currentCryptoTokenAllowExportPrivateKey"
						value="#{web.text.ALLOW}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:outputLabel id="currentCryptoTokenP11LibraryLabel"
					for="currentCryptoTokenP11Library"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}"
					value="#{web.text.CRYPTOTOKEN_TYPE_P11} : #{web.text.CRYPTOTOKEN_LIBRARY}" />
				<h:panelGroup id="currentCryptoTokenP11Library"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}">
					<h:selectOneMenu
						value="#{cryptoTokenMBean.currentCryptoToken.p11Library}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}">
						<f:selectItems
							value="#{cryptoTokenMBean.availableCryptoTokenP11Libraries}" />
					</h:selectOneMenu>
					<h:outputText
						value="#{cryptoTokenMBean.currentCryptoToken.p11LibraryAlias}"
						rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:outputLabel id="currentCryptoTokenP11SlotLabelTypeLabel"
					for="currentCryptoTokenP11SlotLabelType"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}"
					value="#{web.text.CRYPTOTOKEN_TYPE_P11} : #{web.text.CRYPTOTOKEN_LABEL_TYPE}" />
				<h:panelGroup id="currentCryptoTokenP11SlotLabelType"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}">
					<h:panelGroup
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}">
						<h:selectOneMenu
							value="#{cryptoTokenMBean.currentCryptoToken.p11SlotLabelType}"
							onchange="document.getElementById('currentCryptoTokenForm:selectCryptoTokenP11SlotLabelTypeLabel').click();"
							disabled="#{!cryptoTokenMBean.allowedToModify}">
							<f:selectItems
								value="#{cryptoTokenMBean.availableCryptoTokenP11SlotLabelTypes}" />
						</h:selectOneMenu>
						<h:commandButton id="selectCryptoTokenP11SlotLabelTypeLabel"
							action="#{cryptoTokenMBean.selectCryptoTokenLabelType}"
							value="Update" disabled="#{!cryptoTokenMBean.allowedToModify}" />
						<script>
							document
									.getElementById('currentCryptoTokenForm:selectCryptoTokenP11SlotLabelTypeLabel').style.display = 'none';
						</script>
					</h:panelGroup>
					<h:outputText
						value="#{cryptoTokenMBean.currentCryptoToken.p11SlotLabelTypeText}"
						rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:outputLabel id="currentCryptoTokenP11SlotLabel"
					for="currentCryptoTokenP11Slot"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}"
					value="#{web.text.CRYPTOTOKEN_TYPE_P11} : #{web.text.CRYPTOTOKEN_SLOT}" />
				<h:panelGroup id="currentCryptoTokenP11Slot"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}">
					<h:panelGroup
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}">
						<h:selectOneMenu
							value="#{cryptoTokenMBean.currentCryptoToken.p11Slot}"
							rendered="#{cryptoTokenMBean.currentCryptoToken.slotOfTokenLabelType}"
							disabled="#{!cryptoTokenMBean.allowedToModify}">
							<f:selectItems
								value="#{cryptoTokenMBean.availableCryptoTokenP11SlotTokenLabels}" />
						</h:selectOneMenu>
						<h:inputText
							value="#{cryptoTokenMBean.currentCryptoToken.p11Slot}"
							rendered="#{!cryptoTokenMBean.currentCryptoToken.slotOfTokenLabelType}"
							disabled="#{!cryptoTokenMBean.allowedToModify}" />
					</h:panelGroup>
					<h:outputText
						value="#{cryptoTokenMBean.currentCryptoToken.p11Slot}"
						rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

				<h:outputLabel id="currentCryptoTokenP11AttributeFileLabel"
					for="currentCryptoTokenP11AttributeFile"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}"
					value="#{web.text.CRYPTOTOKEN_TYPE_P11} : #{web.text.CRYPTOTOKEN_ATTRFILE}" />
				<h:panelGroup id="currentCryptoTokenP11AttributeFile"
					rendered="#{cryptoTokenMBean.currentCryptoToken.showP11CryptoToken}">
					<h:selectOneMenu
						value="#{cryptoTokenMBean.currentCryptoToken.p11AttributeFile}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}"
						disabled="#{!cryptoTokenMBean.allowedToModify}">
						<f:selectItems
							value="#{cryptoTokenMBean.availableCryptoTokenP11AttributeFiles}" />
					</h:selectOneMenu>
					<h:outputText
						value="#{cryptoTokenMBean.currentCryptoToken.p11AttributeFileAlias}"
						rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
				</h:panelGroup>

                <h:panelGroup id="currentCryptoTokenKeyVaultTypePanelGroup"
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">
                    <h:outputLabel id="currentCryptoTokenKeyVaultTypeLabel"
                        for="currentCryptoTokenKeyVaultType"
                        value="#{web.text.CRYPTOTOKEN_KEYVAULT_TYPE} " />
                    <h:outputText value="#{web.ejbcaWebBean.getHelpReference('/Crypto_Tokens_Overview.html')}" escape="false"/>
                </h:panelGroup>
                <h:panelGroup
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">

                    <h:selectOneMenu
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultType}"
                        rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}"
                        disabled="#{!cryptoTokenMBean.allowedToModify}">
                        <f:selectItem
                            itemValue="standard"
                            itemLabel="Standard"/>
                        <f:selectItem
                            itemValue="premium"
                            itemLabel="Premium"/>
                    </h:selectOneMenu>
                    <h:outputText
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultType}"
                        rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
                </h:panelGroup>

                <h:panelGroup id="currentCryptoTokenKeyVaultNamePanelGroup"
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">
                    <h:outputLabel id="currentCryptoTokenKeyVaultNameLabel"
                        for="currentCryptoTokenKeyVaultName"
                        value="#{web.text.CRYPTOTOKEN_KEYVAULT_NAME} " />
                    <h:outputText value="#{web.ejbcaWebBean.getHelpReference('/Crypto_Tokens_Overview.html')}" escape="false"/>
                </h:panelGroup>
                <h:panelGroup
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">
                    <h:inputText
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultName}"
                        rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}"
                        disabled="#{!cryptoTokenMBean.allowedToModify}" />
                    <h:outputText
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultName}"
                        rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
                </h:panelGroup>

                <h:panelGroup id="currentCryptoTokenKeyVaultClientIDPanelGroup"
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">
                    <h:outputLabel id="currentCryptoTokenKeyVaultClientIDLabel"
                        for="currentCryptoTokenKeyVaultClientID"
                        value="#{web.text.CRYPTOTOKEN_KEYVAULT_CLIENTID} " />
                    <h:outputText value="#{web.ejbcaWebBean.getHelpReference('/Crypto_Tokens_Overview.html')}" escape="false"/>
                </h:panelGroup>
                <h:panelGroup
                    rendered="#{cryptoTokenMBean.currentCryptoToken.showAzureCryptoToken}">
                    <h:inputText
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultClientID}"
                        rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode}"
                        disabled="#{!cryptoTokenMBean.allowedToModify}" />
                    <h:outputText
                        value="#{cryptoTokenMBean.currentCryptoToken.keyVaultClientID}"
                        rendered="#{!cryptoTokenMBean.currentCryptoTokenEditMode}" />
                </h:panelGroup>

				<h:panelGroup />
				<h:panelGroup styleClass="margin-top">
					<h:commandButton
						action="#{cryptoTokenMBean.cancelCurrentCryptoToken}"
						value="#{web.text.CRYPTOTOKEN_CANCEL}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode and cryptoTokenMBean.currentCryptoTokenId != 0}" />
                    <ui:remove>
                    <!-- Three cases of the Save button. 
                    "Save" with slot-check if we are creating a new crypto token, will check if slot is already in use by another crypto token. 
                    "Confirm Save" without slot-check if we are creating a new crypto token, and need to confirm that we are re-using the same slot. 
                    "Save" without slot-check if we are editing an existing new crypto token (currentCryptoTokenId != 0). 
                    -->
                    </ui:remove>
					<h:commandButton
						action="#{cryptoTokenMBean.saveCurrentCryptoTokenWithCheck}"
						value="#{web.text.CRYPTOTOKEN_SAVE}"
						rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode and !cryptoTokenMBean.p11SlotUsed and cryptoTokenMBean.currentCryptoTokenId == 0}" 
						onclick="return checkFieldNotEmpty(document.getElementById('currentCryptoTokenForm:currentCryptoTokenNameText'),'The name of crypto token is mandatory!');"/>
                    <h:commandButton
                        action="#{cryptoTokenMBean.saveCurrentCryptoToken}"
                        value="#{web.text.CRYPTOTOKEN_SAVE_CONFIRM}"
                        rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode and cryptoTokenMBean.p11SlotUsed}" 
                        onclick="return checkFieldNotEmpty(document.getElementById('currentCryptoTokenForm:currentCryptoTokenNameText'),'The name of crypto token is mandatory!');"/>
                    <h:commandButton
                        action="#{cryptoTokenMBean.saveCurrentCryptoToken}"
                        value="#{web.text.CRYPTOTOKEN_SAVE}"
                        rendered="#{cryptoTokenMBean.currentCryptoTokenEditMode and cryptoTokenMBean.currentCryptoTokenId != 0}" 
                        onclick="return checkFieldNotEmpty(document.getElementById('currentCryptoTokenForm:currentCryptoTokenNameText'),'The name of crypto token is mandatory!');"/>
				</h:panelGroup>
			</h:panelGrid>
		</h:form>

		<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_NA}"
			rendered="#{!cryptoTokenMBean.currentCryptoToken.active &amp;&amp; cryptoTokenMBean.currentCryptoTokenId!=0}" />
		<h:form rendered="#{cryptoTokenMBean.currentCryptoToken.active}">
			<h:dataTable value="#{cryptoTokenMBean.keyPairGuiList}"
				var="keyPairGuiInfo"
				rendered="#{!cryptoTokenMBean.keyPairGuiListEmpty}"
				styleClass="grid"
				style="border-collapse: collapse; right: auto; left: auto"
				columnClasses=",,gridCenter,gridCenter,,">
				<h:column>
					<h:selectBooleanCheckbox value="#{keyPairGuiInfo.selected}"
						disabled="#{!cryptoTokenMBean.allowedToModify}" />
				</h:column>
				<h:column>
					<f:facet name="header">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_ALIAS}" />
					</f:facet>
					<h:outputText value="#{keyPairGuiInfo.alias}" />
				</h:column>
				<h:column>
					<f:facet name="header">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_ALGO}" />
					</f:facet>
					<h:outputText value="#{keyPairGuiInfo.keyAlgorithm}" />
				</h:column>
				<h:column>
					<f:facet name="header">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_SPEC}" />
					</f:facet>
					<h:outputText value="#{keyPairGuiInfo.keySpecification}" />
				</h:column>
				<h:column>
					<f:facet name="header">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_SKID}" />
					</f:facet>
					<h:outputText style="font-family: monospace;"
						value="#{keyPairGuiInfo.subjectKeyID}"
						rendered="#{!keyPairGuiInfo.placeholder}" />
					<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_NOTGENERATED}"
						rendered="#{keyPairGuiInfo.placeholder}" />
				</h:column>
				<h:column rendered="#{cryptoTokenMBean.currentCryptoToken.showAuthorizationInfo}">
					<f:facet name="header">
						<h:outputText value="Key Authorization Key"/>
					</f:facet>
					<h:selectOneMenu value="#{keyPairGuiInfo.selectedKakCryptoTokenId}">
						<f:selectItems value="#{cryptoTokenMBean.availableCryptoTokens}"/>
						<f:ajax render="selectKakAliasMenu"/>
					</h:selectOneMenu>
					<h:selectOneMenu id="selectKakAliasMenu" value="#{keyPairGuiInfo.selectedKakKeyAlias}">
						<f:selectItems value="#{keyPairGuiInfo.availableKeyAliases}"/>
						<f:ajax render="selectKakAliasMenu"/>
					</h:selectOneMenu>
				</h:column>
				<h:column>
					<f:facet name="header">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_ACTION}" />
					</f:facet>
					<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_INIT}"
						action="#{cryptoTokenMBean.initializeKey}"
						rendered="#{cryptoTokenMBean.currentCryptoToken.showAuthorizationInfo}"
						disabled="#{keyPairGuiInfo.placeholder or keyPairGuiInfo.initialized}"/>
					<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_AUTH}"
							action="#{cryptoTokenMBean.actionAuthorizeStart}"
							rendered="#{cryptoTokenMBean.currentCryptoToken.showAuthorizationInfo}"
							disabled="#{keyPairGuiInfo.placeholder}">
						<f:ajax execute="@this" render=":modalBlockContainer"/>
					</h:commandButton>
					<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_TEST}"
						action="#{cryptoTokenMBean.testKeyPair}"
						rendered="#{cryptoTokenMBean.allowedToKeyTest}"
						disabled="#{keyPairGuiInfo.placeholder}" />
					<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_REMOVE}"
						action="#{cryptoTokenMBean.removeKeyPair}"
						rendered="#{cryptoTokenMBean.allowedToKeyRemoval}"
						onclick="return confirm('#{web.text.CRYPTOTOKEN_KPM_CONF_REM}')" />
					<h:commandButton
						value="#{web.text.CRYPTOTOKEN_KPM_GENFROMTEMPLATE}"
						action="#{cryptoTokenMBean.generateFromTemplate}"
						rendered="#{keyPairGuiInfo.placeholder &amp;&amp; cryptoTokenMBean.allowedToKeyGeneration}" />
					<h:outputLink
						value="cryptoTokenDownloads?cryptoTokenId=#{cryptoTokenMBean.currentCryptoTokenId}&amp;alias=#{keyPairGuiInfo.alias}"
						rendered="#{!keyPairGuiInfo.placeholder}">
						<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_DOWNPUB}" />
					</h:outputLink>
				</h:column>
			</h:dataTable>
			<h:panelGroup rendered="#{cryptoTokenMBean.keyPairGuiListFailed}">
				<div class="message">
					<table>
						<tr>
							<td class="alert"><h:outputText
									value="#{cryptoTokenMBean.keyPairGuiListError}" /></td>
						</tr>
					</table>
				</div>
			</h:panelGroup>
			<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_NOPAIRS}"
				rendered="#{cryptoTokenMBean.keyPairGuiListEmpty &amp;&amp; !cryptoTokenMBean.keyPairGuiListFailed}" />
			<h:panelGrid columns="3">
				<h:panelGroup
					rendered="#{!cryptoTokenMBean.keyPairGuiListEmpty &amp;&amp; cryptoTokenMBean.allowedToKeyRemoval}" />
				<h:panelGroup
					rendered="#{!cryptoTokenMBean.keyPairGuiListEmpty &amp;&amp; cryptoTokenMBean.allowedToKeyRemoval}" />
				<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_REMOVESEL}"
					action="#{cryptoTokenMBean.removeSelectedKeyPairs}"
					rendered="#{!cryptoTokenMBean.keyPairGuiListEmpty &amp;&amp; cryptoTokenMBean.allowedToKeyRemoval}"
					onclick="return confirm('#{web.text.CRYPTOTOKEN_KPM_CONF_REMS}')" />
				<h:inputText value="#{cryptoTokenMBean.newKeyPairAlias}"
					rendered="#{cryptoTokenMBean.allowedToKeyGeneration}" size="30"
					title="#{web.text.FORMAT_ALIAS}">
					<f:validator validatorId="legalCharsValidator" />
				</h:inputText>
				<h:selectOneMenu value="#{cryptoTokenMBean.newKeyPairSpec}"
					rendered="#{cryptoTokenMBean.allowedToKeyGeneration}">
					<f:selectItems value="#{cryptoTokenMBean.availableKeySpecs}" />
				</h:selectOneMenu>
				<h:commandButton value="#{web.text.CRYPTOTOKEN_KPM_GENNEW}"
					action="#{cryptoTokenMBean.generateNewKeyPair}"
					disabled="#{!cryptoTokenMBean.currentCryptoToken.canGenerateKey}"
					rendered="#{cryptoTokenMBean.allowedToKeyGeneration}" />
				<h:panelGroup
					rendered="#{!cryptoTokenMBean.currentCryptoToken.canGenerateKey}" />
				<h:panelGroup
					rendered="#{!cryptoTokenMBean.currentCryptoToken.canGenerateKey}" />
				<h:outputText
					value="#{cryptoTokenMBean.currentCryptoToken.canGenerateKeyMsg}"
					rendered="#{!cryptoTokenMBean.currentCryptoToken.canGenerateKey}" />
			</h:panelGrid>
		</h:form>
	</ui:define>
	
	<ui:remove><!-- Template will render this when element ":modalBlockContainer" is rendered and "renderModal" param is true. --></ui:remove>
    <ui:param name="renderModal" value="#{cryptoTokenMBean.authorizeInProgress}"/>
    <ui:define name="modal">
        <h:form id="modal">
            <ui:remove><!-- Manually add viewstate due to https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-790 --></ui:remove>
            <h:outputText escape="false" value="&lt;input name='javax.faces.ViewState' type='hidden' value='#{facesContext.application.stateManager.getViewState(facesContext)}'/&gt;"/>

            <h:panelGroup id="authorize" rendered="#{cryptoTokenMBean.authorizeInProgress}">
                <h2><h:outputText value="#{web.text.CRYPTOTOKEN_KPM_AUTH_KEY}"/></h2>
				<h:outputText value="#{web.text.CRYPTOTOKEN_KPM_KEY_OPERATION_COUNT}" style="margin-right: 2px;"/>
				<br/><br/>
				<h:panelGrid columns="2">
					<h:selectBooleanCheckbox id="unlimitedOperations" value="#{cryptoTokenMBean.unlimitedOperations}">
						<f:ajax render="maxNrOfOperations"/>
					</h:selectBooleanCheckbox>
					<h:outputLabel value="#{web.text.UNLIMITED}"/>
					<h:inputText id="maxNrOfOperations" size="19" style="margin-left: 2px; margin-right: 2px;"
					  	value="#{cryptoTokenMBean.maxOperationCount}"
					  	disabled="#{cryptoTokenMBean.unlimitedOperations}" 
					  	label="Max Operation Count">
						<f:validateLongRange minimum="0" maximum="9223372036854775807" /> 
					</h:inputText>
					<h:outputLabel value="Allowed operations"/>
				</h:panelGrid>
				<br/>
               	<h:panelGroup styleClass="fullwidth" layout="block">
                    <h:commandButton value="#{web.text.CANCEL}" action="#{cryptoTokenMBean.actionAuthorizeCancel}" immediate="true">
                        <f:ajax execute="@this" render=":modalBlockContainer"/>
                    </h:commandButton>
                    <h:commandButton id="confirmAuthorizeButton" value="#{web.text.CRYPTOTOKEN_KPM_AUTH}" action="#{cryptoTokenMBean.authorizeKey}">
                    </h:commandButton>
               	</h:panelGroup>
            </h:panelGroup>
        </h:form>
    </ui:define>
	
</ui:composition>
</html>
