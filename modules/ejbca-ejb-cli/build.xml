<?xml version="1.0" encoding="UTF-8"?>
<project name="ejbca-ejb-cli" default="build">
    <description>
            Build file for the remote EJB access CLI
    </description>

	<dirname property="ejbca-ejb-cli.dir" file="${ant.file.ejbca-ejb-cli}"/>

    <import file="${ejbca-ejb-cli.dir}/../build-helpers.xml"/>
	
	<property name="ejbca-ejb-cli.build.dir" location="${ejbca-ejb-cli.dir}/build"/>
    <property name="ejbca-ejb-cli.resources-test.dir" location="${ejbca-ejb-cli.dir}/resources-test"/>
	<property name="ejbca-ejb-cli.build-test.dir" location="${ejbca-ejb-cli.dir}/build-test"/>
	<property name="ejbca-ejb-cli.src.dir" location="${ejbca-ejb-cli.dir}/src"/>
    <property name="ejbca-ejb-cli.src-test.dir" location="${ejbca-ejb-cli.dir}/src-test"/>

	<path id="compile.classpath">
		<path location="${mod.ejbca-ejb-interface.lib}"/>
		<path refid="lib.ejbca-common.classpath"/>
		<path refid="lib.bouncycastle.classpath"/>
		<path refid="lib.log4j.classpath"/>
		<path refid="lib.ldap.classpath"/>
		<path refid="lib.commons-lang.classpath"/>
		<path refid="lib.commons-beanutils.classpath"/>
		<path refid="lib.commons-config.classpath"/>
		<path refid="lib.commons-collections.classpath"/>
		<path refid="lib.commons-io.classpath"/>
		<path refid="lib.commons-logging.classpath"/>
		<path refid="lib.batik.classpath"/>	<!-- SVGTemplatePrinter -->
		<path refid="lib.jacknji.classpath"/>
        <path refid="lib.json-simple.classpath"/>
        <path refid="lib.hc.classpath"/>
		<path location="${mod.ejbca-entity.lib}"/>
        <path location="${mod.cesecore-entity.lib}"/>
        <path location="${mod.cesecore-common.lib}"/>
        <path location="${mod.cesecore-ejb-interface.lib}"/>
		<path location="${mod.cli-util.lib}"/>
		<path location="${mod.peerconnector-cli.lib}"/>
		<path location="${mod.peerconnector-interface.lib}"/>
		<path location="${mod.peerconnector-common.lib}"/>
		<path location="${mod.peerconnector-publ.lib}"/>
        <path location="${mod.plugins-ee.lib}"/>
		<path refid="lib.xstream.classpath"/>
	</path>

    <path id="compile-test.classpath">
        <path location="${ejbca-ejb-cli.build-test.dir}"/>
        <path refid="compile.classpath"/>
        <path refid="lib.easymock.classpath"/>
        <path refid="lib.test.powermock.classpath"/>
        <path refid="lib.junit.classpath"/>
        <path location="${ejbca-ejb-cli.build.dir}"/>
        <path location="${ejbca-ejb-cli.dir}/../dist/systemtests-interfaces.jar"/>
    </path>

    <path id="test.classpath">
        <path refid="compile-test.classpath"/>
        <path location="${ejbca-ejb-cli.build-test.dir}/resources-test"/>
        <pathelement path="${clover.jar}"/>
    </path>

    <target name="build" description="Build this module" depends="compile">
    	<!-- Upgrade of certificate profiles requires extendedkeyusage.properties -->
    	<mkdir dir="${ejbca-ejb-cli.build.dir}/conf"/>
    	<copy todir="${ejbca-ejb-cli.build.dir}/conf">
    		<fileset dir="${ejbca.home}/conf" includes="extendedkeyusage.properties"/>
    		<fileset dir="${ejbca.home}/conf" includes="ejbca.properties"/>
            <!-- Required because it holds 'password.encryption.key', required for 'encryptpwd' CLI command. -->
            <fileset dir="${ejbca.home}/conf" includes="cesecore.properties"/>
    	</copy>
    	<copy todir="${ejbca-ejb-cli.build.dir}">
    		<fileset dir="${ejbca.home}/src/java" includes="defaultvalues.properties"/>
    	</copy>
    	<!-- Create the JAR -->
    	<pathconvert property="ejbca-ejb-cli.dependencies" pathsep=" ">
    	    <path>
	        	<fileset dir="${mod.ejbca-ejb-cli.dist}" includes="lib/*.jar"/>
    	    </path>
    		<map from="${mod.ejbca-ejb-cli.dist}/" to=""/>
    	</pathconvert>
    	<dirname file="${mod.ejbca-ejb-cli.lib}" property="mod.ejbca-ejb-cli.lib.dir"/>
    	<buildservicemanifest interface="org.ejbca.ui.cli.infrastructure.command.CliCommandPlugin" file="${ejbca-ejb-cli.build.dir}" classpath="compile.classpath"/>
    	<mkdir dir="${mod.ejbca-ejb-cli.lib.dir}" />	<!-- Make sure the dir exists before we start the jar-task -->
    	<jar destfile="${mod.ejbca-ejb-cli.lib}">
    		<manifest>
                <attribute name="Implementation-Version" value="${app.version}"/>
    			<attribute name="Class-path" value="${ejbca-ejb-cli.dependencies} ./" />
    			<attribute name="Main-Class" value="org.ejbca.ui.cli.EjbcaEjbCli"/>
    		</manifest>
   			<fileset dir="${ejbca-ejb-cli.build.dir}" includes="**/*.class **/*.xml **/*.properties META-INF/**/*"/>
    	</jar>
    </target>

    <target name="clean" description="Clean up this module">
		<delete dir="${ejbca-ejb-cli.build.dir}" />
        <delete dir="${ejbca-ejb-cli.build-test.dir}" />
		<delete file="${mod.ejbca-ejb-cli.lib}" />
    	<delete dir="${mod.ejbca-ejb-cli.dist}" />
    </target>
	
    <target name="compile" depends="setup, with.clover">
    	<mkdir dir="${ejbca-ejb-cli.build.dir}" />
        <javac srcdir="${ejbca-ejb-cli.src.dir}" destdir="${ejbca-ejb-cli.build.dir}" debug="on" includeantruntime="no"
        	encoding="UTF-8" target="${java.target.version}">
        	<classpath>
        		<path refid="compile.classpath"/>
        		<path refid="lib.jee.classpath"/>
        	</classpath>
    	</javac>
    </target>

    <target name="setup">
    	<mkdir dir="${mod.ejbca-ejb-cli.dist}" />
    	<mkdir dir="${mod.ejbca-ejb-cli.dist}/lib" />
    	<pathconvert property="lib.compile.classpath.property" pathsep=" ">
    	    <path refid="compile.classpath" />
    		<map from="${ejbca.home}/" to=""/>
    	</pathconvert>
    	<copy todir="${mod.ejbca-ejb-cli.dist}/lib" flatten="true">
    		<fileset dir="${ejbca.home}" includes="${lib.compile.classpath.property}"/>
    	</copy>
    	<copy todir="${mod.ejbca-ejb-cli.dist}/lib" flatten="true" verbose="false">
			<path refid="lib.jee.classpath"/>
    		<path refid="lib.jpa.classpath"/>
       		<path refid="lib.jee-client.classpath"/>
    		<!-- slf4j-log4j.jar is needed just to avoid errors when running the CLI with later versions of JBoss -->
       		<path refid="lib.slf4jlog4j.classpath"/>
       		<path refid="lib.jacknji.classpath"/>
    	</copy>
		<!-- clover.jar is needed if we compiled with clover (see modules/build.xml). Without this cli does not work when using clover -->
    	<copy todir="${mod.ejbca-ejb-cli.dist}/lib" flatten="true" verbose="false" failonerror="false">
    		<fileset file="${clover.jar}" erroronmissingdir="false"/>
		</copy>
    	<copy todir="${mod.ejbca-ejb-cli.dist}">
    		<fileset dir="${ejbca.home}/src" includes="intresources/*resources.*.properties"/>
    		<fileset dir="${ejbca.home}/conf" includes="batchtool.properties"/>
    	</copy>
        <copy file="${log4j.cli.file}" tofile="${mod.ejbca-ejb-cli.dist}/log4j.xml" failonerror="true"/>
		<copy file="${jndi.properties.file}" tofile="${mod.ejbca-ejb-cli.dist}/jndi.properties" failonerror="true"/>
		<copy file="${jboss-ejb-client.properties}" todir="${mod.ejbca-ejb-cli.dist}" failonerror="false"/>
    </target>

    <!-- Tests -->
    <target name="compile-unit-tests" depends="build, with.clover">
        <mkdir dir="${ejbca-ejb-cli.build-test.dir}" />
        <javac srcdir="${ejbca-ejb-cli.src-test.dir}" destdir="${ejbca-ejb-cli.build-test.dir}" debug="on" includeantruntime="no"
               encoding="UTF-8" target="${java.target.version}" classpathref="compile-test.classpath"/>
        <mkdir dir="${ejbca-ejb-cli.build-test.dir}/resources-test"/>
        <copy todir="${ejbca-ejb-cli.build-test.dir}/resources-test">
            <fileset dir="${ejbca-ejb-cli.dir}/resources-test"/>
        </copy>
    </target>

    <target name="test:unit" depends="compile-unit-tests" description="Run Unit tests for this module">
        <antcall target="showtime" inheritall="true" inheritrefs="true"/>
        <junit printsummary="yes" haltonfailure="no" showoutput="${test.showoutput}" dir="${ejbca-ejb-cli.dir}">
            <classpath>
                <path refid="test.classpath"/>
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${reports.dir}">
                <fileset dir="${ejbca-ejb-cli.build-test.dir}" includes="**/*UnitTest.class">
                </fileset>
            </batchtest>
            <jvmarg line="${tests.jvmargs}"/>
        </junit>
        <antcall target="showtime" inheritall="true" inheritrefs="true"/>
    </target>

    <target name="runone" depends="compile-unit-tests">
        <fail message="'test.runone' is not set. Example -Dtest.runone=Test . You can also use -Dtest.showoutput=true to send test output to console." unless="test.runone" />
        <junit printsummary="yes" haltonfailure="no" showoutput="${test.showoutput}">
            <classpath>
                <path refid="test.classpath"/>
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${reports.dir}">
                <fileset dir="${ejbca-ejb-cli.build-test.dir}">
                    <include name="**/${test.runone}.class" />
                </fileset>
            </batchtest>
            <jvmarg line="${tests.jvmargs}"/>
        </junit>
    </target>

</project>
