<?xml version="1.0" encoding="UTF-8"?>
<project name="cesecore-entity" basedir="../.." default="jar">
	<property environment="env" />
	<dirname property="cesecore-entity.dir" file="${ant.file.cesecore-entity}" />

	<dirname property="cesecore-common.dir" file="${cesecore-entity.dir}/../cesecore-common/" />

	<property name="build.dir" location="${cesecore-entity.dir}/build" />
	<property name="build-test.dir" location="${cesecore-entity.dir}/build-test" />
	<property name="src-test.dir" location="${cesecore-entity.dir}/src-test" />

	<import file="${cesecore-entity.dir}/../build.xml" />

	<path id="compile.classpath">
		<path refid="lib.jee.classpath" />
		<path refid="lib.jpa.classpath" />
		<path refid="lib.cert-cvc.classpath" />
		<path refid="lib.bouncycastle.classpath" />
		<path refid="lib.log4j.classpath" />
		<path refid="lib.commons-logging.classpath" />
		<path refid="lib.commons-lang.classpath" />
		<path refid="lib.commons-config.classpath" />
		<path refid="lib.commons-collections.classpath" />
		<path location="${cesecore-entity.dir}/../cesecore-common/dist/cesecore-common.jar" />
	</path>

	<path id="test.classpath">
		<path refid="compile.classpath" />
		<path refid="lib.junit.classpath" />
		<path location="${build.dir}/classes" />
		<path location="${build-test.dir}" />
		<path refid="lib.commons-io.classpath" />
		<path refid="lib.easymock.classpath"/>
		<path refid="lib.commons-codec.classpath"/>
	</path>

	<target name="jar" depends="with.clover">
		<mkdir dir="${build.dir}/classes" />
		<javac srcdir="${cesecore-entity.dir}/src" destdir="${build.dir}/classes" debug="on" includeantruntime="no" encoding="UTF-8" target="${java.target.version}">
			<classpath refid="compile.classpath" />
		</javac>
		<mkdir dir="${cesecore-entity.dir}/dist" />
		<jar destfile="${cesecore-entity.dir}/dist/cesecore-entity.jar">
			<fileset dir="${build.dir}/classes/" excludes="**/*.java" />
			<fileset dir="${cesecore-entity.dir}/src/" excludes="**/*.java" />
		</jar>
	</target>

	<target name="clean">
		<delete dir="${cesecore-entity.dir}/dist" />
		<delete dir="${build.dir}" />
		<delete dir="${build-test.dir}" />
	</target>

	<target name="compile-tests" depends="jar, with.clover">
		<mkdir dir="${build-test.dir}" />
		<javac destdir="${build-test.dir}" debug="on" includeantruntime="no" encoding="UTF-8" target="${java.target.version}" classpathref="test.classpath">
			<src path="${cesecore-common.dir}/cesecore-common/src-test"/>
			<include name="org/cesecore/keys/token/PKCS11TestUtils.java"/>
		</javac>
		<javac destdir="${build-test.dir}" debug="on" includeantruntime="no" encoding="UTF-8" target="${java.target.version}" classpathref="test.classpath">
			<src path="${src-test.dir}"/>
		</javac>
		<copy file="${log4j.test.file}" tofile="${build-test.dir}/log4j.xml" failonerror="true" />
		<copy todir="${build-test.dir}" failonerror="true">
			<fileset dir="${ejbca.home}/src" includes="intresources/**" />
			<fileset dir="${ejbca.home}/src/java/" includes="defaultvalues.properties" />
		</copy>
		<!-- systemtests.properties needs to be in the classpath, if it exists for targeting non-default environment-->
		<copy file="${systemtests.properties.file}" todir="${build-test.dir}" failonerror="false" />
	</target>

	<target name="test" depends="compile-tests" description="Run tests for this module">
		<antcall target="showtime" />
		<junit printsummary="yes" haltonfailure="no" dir="${cesecore-entity.dir}">
			<classpath>
				<path refid="test.classpath" />
				<pathelement path="${clover.jar}" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${build-test.dir}" includes="**/*Test.class">
				</fileset>
			</batchtest>
		</junit>
		<antcall target="showtime" />
	</target>

	<target name="runone" depends="compile-tests">
		<fail message="'test.runone' is not set. Example -Dtest.runone=FooTest" unless="test.runone" />
		<junit printsummary="yes" haltonfailure="no">
			<classpath>
				<path refid="test.classpath" />
				<pathelement path="${clover.jar}" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${build-test.dir}">
					<include name="**/${test.runone}.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>
