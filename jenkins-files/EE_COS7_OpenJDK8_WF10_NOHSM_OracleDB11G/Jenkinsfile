pipeline {
	agent {
		label "docker"
	}
    stages {
		stage('verify that space is clean') {
            steps {
                sh "docker container rm oracledb -f || true"
                sh "docker container rm ee_cos7_openjdk8_wf10_nohsm_oracledb11g -f || true"
                sh "docker network rm bridge my_isolated_bridge_network || true"
                sh "rm -rf ear"
            }
        }
        stage('network') {
            steps {
                sh "docker network create --driver bridge my_isolated_bridge_network || true"
            }
        }
		stage('database') {
            steps {
                dir ('ejbca/jenkins-files/EE_COS7_OpenJDK8_WF10_NOHSM_OracleDB11G/oracle_image') {
                    sh "docker build -t oracledb ."
                    sh "docker run -d --name oracledb --net=my_isolated_bridge_network --shm-size=2g oracledb"
                    
                    // waits until oracleDB comes up
                    timeout(10) {
                        waitUntil {
                            script {
                                try {
                                    // the command needs to be its own variable, otherwise sh call doesn't handle the | pipe correctly
                                    def command = 'docker logs oracledb 2>&1 | grep  -c -m 1 "DATABASE IS READY TO USE!"'
                                    def r = sh script: command, returnStatus: true
                                    return (r == 0)
                                } catch (exc) {
                                    echo exc;
                                }
                            }
                        }
                    }
                }
            }
        }
        stage('deploy and run system tests') {
            steps {
                sh "mkdir ear || true"
                dir ('ejbca/jenkins-files/EE_COS7_OpenJDK8_WF10_NOHSM_OracleDB11G/ejbca_image') {
                    sh "docker build -t ee_cos7_openjdk8_wf10_nohsm_oracledb11g -m 5GB ."
                    sh "docker run --name ee_cos7_openjdk8_wf10_nohsm_oracledb11g --net=my_isolated_bridge_network -v " + "$env.WORKSPACE" + ":/app ee_cos7_openjdk8_wf10_nohsm_oracledb11g"
                }
            }
        }
    }
    post {
        always {
            junit "ejbca/**/reports/**/TEST-*.xml"
            sh "docker stop --time=1 ee_cos7_openjdk8_wf10_nohsm_oracledb11g || true"
            sh "docker rm -f ee_cos7_openjdk8_wf10_nohsm_oracledb11g || true"
            sh "docker stop --time=1 oracledb"
            sh "docker rm -f oracledb"
            sh "docker network rm bridge my_isolated_bridge_network || true"
            cleanWs()
        }
    }
}
