pipeline {
	agent {
		label "docker"
	}
	environment {
		JENKINS_JOB_FOLDER = 'EE_COS7_OpenJDK8_WF10_NOHSM_DB2'
		DOCKER_NAME_BASE = 'ee_cos7_openjdk8_wf10_nohsm_db2'
		DOCKER_NAME_NET = 'net_ee_cos7_openjdk8_wf10_nohsm_db2'
		DOCKER_NAME_DB = 'db_ee_cos7_openjdk8_wf10_nohsm_db2'
		DB2_VERSION = '11.5.0.0a'
		DB2_PORTS = '50000:50000'
		DB2_PASSWORD = 'db2inst1'
	}
	stages {
		stage('verify that space is clean') {
			steps {
				sh "docker container rm ${env.DOCKER_NAME_DB} -f || true"
				sh "docker container rm ${env.DOCKER_NAME_BASE} -f || true"
				sh "docker network rm ${env.DOCKER_NAME_NET} || true"
				sh "rm -rf ear"
			}
		}
		stage('network') {
			steps {
				sh "docker network create --driver bridge ${env.DOCKER_NAME_NET} || true"
			}
		}
		stage('database') {
			steps {
                dir ("ejbca/jenkins-files/${env.JENKINS_JOB_FOLDER}/db2") {
                    sh "docker build -t ${env.DOCKER_NAME_DB} -m 3GB . "
                    sh "docker run -d --name ${env.DOCKER_NAME_DB} --net=${env.DOCKER_NAME_NET} --privileged=true -p ${env.DB_PORTS} -v ${env.WORKSPACE}:/database ${env.DOCKER_NAME_DB}"
                    sh "sleep 120"
                }
            }
		}
		stage('deploy and run system tests') {
			steps {
				sh "mkdir ear || true"
				dir ("ejbca/jenkins-files/${env.JENKINS_JOB_FOLDER}") {
					sh "docker build -t ${env.DOCKER_NAME_BASE} -m 3GB ."
					sh "docker run --name ${env.DOCKER_NAME_BASE} --net=${env.DOCKER_NAME_NET} -v ${env.WORKSPACE}:/app ${env.DOCKER_NAME_BASE}"
				}
			}
		}
		stage('save test results') {
			steps {
				junit "ejbca/**/reports/**/TEST-*.xml"
			}
		}
	}
	post {
		always {
			sh "docker stop --time=1 ${env.DOCKER_NAME_BASE} || true"
			sh "docker rm -f ${env.DOCKER_NAME_BASE} || true"
			sh "docker stop --time=1 ${env.DOCKER_NAME_DB} || true"
			sh "docker rm -f ${env.DOCKER_NAME_DB} || true"
			sh "docker network rm ${env.DOCKER_NAME_NET} || true"
			cleanWs()
		}
	}
}
