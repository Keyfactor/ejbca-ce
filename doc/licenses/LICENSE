The LGPL (GNU LESSER GENERAL PUBLIC LICENSE) version 2.1 or later applies to all releases of 
EJBCA Community (hereafter referred to as EJBCA).
See LICENSE-LGPL-2.1 or http://www.opensource.org/licenses/lgpl-license.html.

EJBCA is released under version 2.1 of the LGPL. EJBCA is committed to stay with
version 2.1 of the license for the foreseeable future.
The text "either version 2.1 of the License, or any later version" in the license header
is there to make EJBCA compatible with later versions of the license, i.e. it is possible 
to mix in code from EJBCA in other projects using a later version of the license.    

A clarification about the relationship between the LGPL and Java can be found on:
http://www.gnu.org/licenses/lgpl-java.html
In short, LGPL works exactly the same way in Java or in C. I.e. using a library (jar) 
from an application does not make the application a derivative work that must be 
licensed under the LGPL.

To clarify the case for EJBCA, this means that:
The code itself (java code, tools, jars, etc) can NOT be changed without changes being 
put under the same license as EJBCA.
Using the interfaces to use or integrate EJBCA in another project, without 
modifying EJBCA code is allowed and does not put any constraints on the product 
(the derived work).

Any modification to java code which is part of EJBCA should fall under LGPL.
For example creating a new MyAlgSigningSession (implementing interface
ISignSession) replacing the EJBCA RSASigningSession and deploying
MyAlgSigningSession by modifying src/ca/META-INF/ejb-jar.xml to use the new 
MyAlgSigningSession should make MyAlgSigningSession a piece of LGPL code.

Taking EJBCA and integrating it into a web application by using the interfaces to 
the RA (IUserAdminSession through rmi) to create users for EJBCA from another source
(integrated with user registration in the application) does NOT put any 
constraints on the whole application itself. A notice that the application uses 
EJBCA and the possibility to get the source of EJBCA used in the application 
should be provided.

Using the plug-in APIs it is possible to add functionality to EJBCA that does not fall under the LGPL.
Implementing the plug-in API usually means implementing an interface in EJBCA and entering the
classpath in a configuration page (for example custom publishers).
A custom publisher would not have to be released as LGPL.

